
Eindopdracht.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  00000ea0  00000f34  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ea0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080012a  0080012a  00000f5e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f5e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000fbc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000ff8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ef8  00000000  00000000  000010a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000988  00000000  00000000  00001f98  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006ca  00000000  00000000  00002920  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b8  00000000  00000000  00002fec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000588  00000000  00000000  000031a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000044d  00000000  00000000  0000372c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00003b79  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	ae c0       	rjmp	.+348    	; 0x162 <__vector_1>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4b c0       	rjmp	.+150    	; 0xc8 <__vector_12>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 ea       	ldi	r30, 0xA0	; 160
  a0:	fe e0       	ldi	r31, 0x0E	; 14
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 32       	cpi	r26, 0x2A	; 42
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa e2       	ldi	r26, 0x2A	; 42
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 33       	cpi	r26, 0x30	; 48
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	a2 d1       	rcall	.+836    	; 0x408 <main>
  c4:	eb c6       	rjmp	.+3542   	; 0xe9c <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <__vector_12>:
volatile uint16_t delay_count = 35000;
volatile uint8_t valueRed = 0x00;
volatile uint8_t valueGreen = 0x00;

// interrupt for making the buzzer beep with a variable duration
ISR(TIMER1_COMPA_vect) {
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	0b b6       	in	r0, 0x3b	; 59
  d4:	0f 92       	push	r0
  d6:	2f 93       	push	r18
  d8:	8f 93       	push	r24
  da:	9f 93       	push	r25
  dc:	ef 93       	push	r30
  de:	ff 93       	push	r31
	if (delay_count < MIN_BUZZER_THRESHOLD)
  e0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  e4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  e8:	88 35       	cpi	r24, 0x58	; 88
  ea:	9b 41       	sbci	r25, 0x1B	; 27
  ec:	50 f4       	brcc	.+20     	; 0x102 <__vector_12+0x3a>
	{
		PORTF = BIT(1);
  ee:	82 e0       	ldi	r24, 0x02	; 2
  f0:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
		delay_count = MIN_BUZZER_THRESHOLD;
  f4:	88 e5       	ldi	r24, 0x58	; 88
  f6:	9b e1       	ldi	r25, 0x1B	; 27
  f8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  fc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 100:	16 c0       	rjmp	.+44     	; 0x12e <__vector_12+0x66>
		} else if (delay_count > MAX_BUZZER_THRESHOLD){
 102:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 106:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 10a:	81 33       	cpi	r24, 0x31	; 49
 10c:	95 47       	sbci	r25, 0x75	; 117
 10e:	48 f0       	brcs	.+18     	; 0x122 <__vector_12+0x5a>
		delay_count = MAX_BUZZER_THRESHOLD;
 110:	80 e3       	ldi	r24, 0x30	; 48
 112:	95 e7       	ldi	r25, 0x75	; 117
 114:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 118:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		PORTF = 0;
 11c:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
 120:	06 c0       	rjmp	.+12     	; 0x12e <__vector_12+0x66>
		} else {
		PORTF ^= BIT(1);
 122:	e2 e6       	ldi	r30, 0x62	; 98
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	90 81       	ld	r25, Z
 128:	82 e0       	ldi	r24, 0x02	; 2
 12a:	89 27       	eor	r24, r25
 12c:	80 83       	st	Z, r24
	}
	delay_count = distance;
 12e:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <distance>
 132:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <distance+0x1>
 136:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 13a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	OCR1A = delay_count;		
 13e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 142:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 146:	9b bd       	out	0x2b, r25	; 43
 148:	8a bd       	out	0x2a, r24	; 42
}
 14a:	ff 91       	pop	r31
 14c:	ef 91       	pop	r30
 14e:	9f 91       	pop	r25
 150:	8f 91       	pop	r24
 152:	2f 91       	pop	r18
 154:	0f 90       	pop	r0
 156:	0b be       	out	0x3b, r0	; 59
 158:	0f 90       	pop	r0
 15a:	0f be       	out	0x3f, r0	; 63
 15c:	0f 90       	pop	r0
 15e:	1f 90       	pop	r1
 160:	18 95       	reti

00000162 <__vector_1>:

// interrupt when received echo from ultrasone sensor
ISR (INT0_vect){
 162:	1f 92       	push	r1
 164:	0f 92       	push	r0
 166:	0f b6       	in	r0, 0x3f	; 63
 168:	0f 92       	push	r0
 16a:	11 24       	eor	r1, r1
 16c:	2f 93       	push	r18
 16e:	8f 93       	push	r24
 170:	9f 93       	push	r25
	// read value of Timer 3
	int timerValue = TCNT3;
 172:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 176:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
	if (timerValue > MAX_BUZZER_THRESHOLD)
 17a:	81 33       	cpi	r24, 0x31	; 49
 17c:	25 e7       	ldi	r18, 0x75	; 117
 17e:	92 07       	cpc	r25, r18
 180:	3c f0       	brlt	.+14     	; 0x190 <__vector_1+0x2e>
	{
		distance = -1;
 182:	8f ef       	ldi	r24, 0xFF	; 255
 184:	9f ef       	ldi	r25, 0xFF	; 255
 186:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <distance+0x1>
 18a:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <distance>
 18e:	04 c0       	rjmp	.+8      	; 0x198 <__vector_1+0x36>
	} else {
		distance = timerValue;
 190:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <distance+0x1>
 194:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <distance>
	}
}
 198:	9f 91       	pop	r25
 19a:	8f 91       	pop	r24
 19c:	2f 91       	pop	r18
 19e:	0f 90       	pop	r0
 1a0:	0f be       	out	0x3f, r0	; 63
 1a2:	0f 90       	pop	r0
 1a4:	1f 90       	pop	r1
 1a6:	18 95       	reti

000001a8 <wait>:

void wait(int ms) {
	for (int i = 0; i < ms; i++) {
 1a8:	20 e0       	ldi	r18, 0x00	; 0
 1aa:	30 e0       	ldi	r19, 0x00	; 0
 1ac:	08 c0       	rjmp	.+16     	; 0x1be <wait+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ae:	ef ec       	ldi	r30, 0xCF	; 207
 1b0:	f7 e0       	ldi	r31, 0x07	; 7
 1b2:	31 97       	sbiw	r30, 0x01	; 1
 1b4:	f1 f7       	brne	.-4      	; 0x1b2 <wait+0xa>
 1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <wait+0x10>
 1b8:	00 00       	nop
 1ba:	2f 5f       	subi	r18, 0xFF	; 255
 1bc:	3f 4f       	sbci	r19, 0xFF	; 255
 1be:	28 17       	cp	r18, r24
 1c0:	39 07       	cpc	r19, r25
 1c2:	ac f3       	brlt	.-22     	; 0x1ae <wait+0x6>
		_delay_ms(1);
	}
}
 1c4:	08 95       	ret

000001c6 <wait_micro>:

void wait_micro(int us) {
	for (int i = 0; i < us; i++) {
 1c6:	20 e0       	ldi	r18, 0x00	; 0
 1c8:	30 e0       	ldi	r19, 0x00	; 0
 1ca:	06 c0       	rjmp	.+12     	; 0x1d8 <wait_micro+0x12>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1cc:	42 e0       	ldi	r20, 0x02	; 2
 1ce:	4a 95       	dec	r20
 1d0:	f1 f7       	brne	.-4      	; 0x1ce <wait_micro+0x8>
 1d2:	00 c0       	rjmp	.+0      	; 0x1d4 <wait_micro+0xe>
 1d4:	2f 5f       	subi	r18, 0xFF	; 255
 1d6:	3f 4f       	sbci	r19, 0xFF	; 255
 1d8:	28 17       	cp	r18, r24
 1da:	39 07       	cpc	r19, r25
 1dc:	bc f3       	brlt	.-18     	; 0x1cc <wait_micro+0x6>
		_delay_us(1);
	}
}
 1de:	08 95       	ret

000001e0 <lcd_strobe_lcd_e>:
	lcd_strobe_lcd_e();
	
}

void lcd_strobe_lcd_e(void) {
	PORTC |= (1<<LCD_E);
 1e0:	85 b3       	in	r24, 0x15	; 21
 1e2:	88 60       	ori	r24, 0x08	; 8
 1e4:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1e6:	8f ec       	ldi	r24, 0xCF	; 207
 1e8:	97 e0       	ldi	r25, 0x07	; 7
 1ea:	01 97       	sbiw	r24, 0x01	; 1
 1ec:	f1 f7       	brne	.-4      	; 0x1ea <lcd_strobe_lcd_e+0xa>
 1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <lcd_strobe_lcd_e+0x10>
 1f0:	00 00       	nop
	_delay_ms(1);
	PORTC &= ~(1<<LCD_E);
 1f2:	85 b3       	in	r24, 0x15	; 21
 1f4:	87 7f       	andi	r24, 0xF7	; 247
 1f6:	85 bb       	out	0x15, r24	; 21
 1f8:	8f ec       	ldi	r24, 0xCF	; 207
 1fa:	97 e0       	ldi	r25, 0x07	; 7
 1fc:	01 97       	sbiw	r24, 0x01	; 1
 1fe:	f1 f7       	brne	.-4      	; 0x1fc <lcd_strobe_lcd_e+0x1c>
 200:	00 c0       	rjmp	.+0      	; 0x202 <lcd_strobe_lcd_e+0x22>
 202:	00 00       	nop
 204:	08 95       	ret

00000206 <lcd_write_command>:
		_delay_us(1);
	}
}

void lcd_write_command(unsigned char byte)
{
 206:	cf 93       	push	r28
 208:	c8 2f       	mov	r28, r24
	PORTC = byte;
 20a:	85 bb       	out	0x15, r24	; 21
	PORTC &= ~(1<<LCD_RS);
 20c:	85 b3       	in	r24, 0x15	; 21
 20e:	8b 7f       	andi	r24, 0xFB	; 251
 210:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 212:	e6 df       	rcall	.-52     	; 0x1e0 <lcd_strobe_lcd_e>

	PORTC = (byte<<4);
 214:	c2 95       	swap	r28
 216:	c0 7f       	andi	r28, 0xF0	; 240
 218:	c5 bb       	out	0x15, r28	; 21
	PORTC &= ~(1<<LCD_RS);
 21a:	85 b3       	in	r24, 0x15	; 21
 21c:	8b 7f       	andi	r24, 0xFB	; 251
	lcd_strobe_lcd_e();
 21e:	85 bb       	out	0x15, r24	; 21
 220:	df df       	rcall	.-66     	; 0x1e0 <lcd_strobe_lcd_e>
}
 222:	cf 91       	pop	r28
 224:	08 95       	ret

00000226 <lcd_writeChar>:

void lcd_writeChar(unsigned char data) {
 226:	cf 93       	push	r28
 228:	c8 2f       	mov	r28, r24
	PORTC = data & 0xF0;
 22a:	80 7f       	andi	r24, 0xF0	; 240
 22c:	85 bb       	out	0x15, r24	; 21
	PORTC |= (1<<LCD_RS);
 22e:	85 b3       	in	r24, 0x15	; 21
 230:	84 60       	ori	r24, 0x04	; 4
 232:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 234:	d5 df       	rcall	.-86     	; 0x1e0 <lcd_strobe_lcd_e>
	
	PORTC = (data & 0x0F) <<4;
 236:	20 e1       	ldi	r18, 0x10	; 16
 238:	c2 9f       	mul	r28, r18
 23a:	c0 01       	movw	r24, r0
 23c:	11 24       	eor	r1, r1
 23e:	85 bb       	out	0x15, r24	; 21
	PORTC |= (1<<LCD_RS);
 240:	85 b3       	in	r24, 0x15	; 21
 242:	84 60       	ori	r24, 0x04	; 4
	lcd_strobe_lcd_e();
 244:	85 bb       	out	0x15, r24	; 21
 246:	cc df       	rcall	.-104    	; 0x1e0 <lcd_strobe_lcd_e>
	
}
 248:	cf 91       	pop	r28
 24a:	08 95       	ret

0000024c <init_4bits_mode>:
	PORTC &= ~(1<<LCD_E);
	_delay_ms(1);
}

void init_4bits_mode(void) {
	DDRC = 0xFF;
 24c:	8f ef       	ldi	r24, 0xFF	; 255
 24e:	84 bb       	out	0x14, r24	; 20
	PORTC = 0x00;
 250:	15 ba       	out	0x15, r1	; 21

	lcd_write_command( 0x28);
 252:	88 e2       	ldi	r24, 0x28	; 40
 254:	d8 df       	rcall	.-80     	; 0x206 <lcd_write_command>
	lcd_strobe_lcd_e();
 256:	c4 df       	rcall	.-120    	; 0x1e0 <lcd_strobe_lcd_e>

	lcd_write_command( 0x28);
 258:	88 e2       	ldi	r24, 0x28	; 40
 25a:	d5 df       	rcall	.-86     	; 0x206 <lcd_write_command>
	lcd_strobe_lcd_e();
 25c:	c1 df       	rcall	.-126    	; 0x1e0 <lcd_strobe_lcd_e>
	
	lcd_write_command( 0x28);
 25e:	88 e2       	ldi	r24, 0x28	; 40
	lcd_strobe_lcd_e();
 260:	d2 df       	rcall	.-92     	; 0x206 <lcd_write_command>
	
	lcd_write_command( 0x80);
 262:	be df       	rcall	.-132    	; 0x1e0 <lcd_strobe_lcd_e>
 264:	80 e8       	ldi	r24, 0x80	; 128
	lcd_strobe_lcd_e();
 266:	cf df       	rcall	.-98     	; 0x206 <lcd_write_command>

	lcd_write_command( 0x00);
 268:	bb df       	rcall	.-138    	; 0x1e0 <lcd_strobe_lcd_e>
 26a:	80 e0       	ldi	r24, 0x00	; 0
	lcd_strobe_lcd_e();
 26c:	cc df       	rcall	.-104    	; 0x206 <lcd_write_command>
	lcd_write_command( 0xF0);
 26e:	b8 df       	rcall	.-144    	; 0x1e0 <lcd_strobe_lcd_e>
 270:	80 ef       	ldi	r24, 0xF0	; 240
 272:	c9 df       	rcall	.-110    	; 0x206 <lcd_write_command>
	lcd_strobe_lcd_e();
 274:	b5 df       	rcall	.-150    	; 0x1e0 <lcd_strobe_lcd_e>
 276:	80 e0       	ldi	r24, 0x00	; 0

	lcd_write_command( 0x00);
 278:	c6 df       	rcall	.-116    	; 0x206 <lcd_write_command>
 27a:	b2 df       	rcall	.-156    	; 0x1e0 <lcd_strobe_lcd_e>
 27c:	80 e6       	ldi	r24, 0x60	; 96
	lcd_strobe_lcd_e();
 27e:	c3 df       	rcall	.-122    	; 0x206 <lcd_write_command>
 280:	af cf       	rjmp	.-162    	; 0x1e0 <lcd_strobe_lcd_e>
	lcd_write_command( 0x60);
 282:	08 95       	ret

00000284 <clear_lcd>:
 284:	81 e0       	ldi	r24, 0x01	; 1
 286:	bf cf       	rjmp	.-130    	; 0x206 <lcd_write_command>
	lcd_strobe_lcd_e();
 288:	08 95       	ret

0000028a <init_buzzer>:
 28a:	e1 e6       	ldi	r30, 0x61	; 97
 28c:	f0 e0       	ldi	r31, 0x00	; 0
{
	lcd_write_command(0x01);
}

void init_buzzer(){
	DDRF |= BIT(1); // Set the buzzer pin
 28e:	80 81       	ld	r24, Z
 290:	82 60       	ori	r24, 0x02	; 2
 292:	80 83       	st	Z, r24
	
	TCCR1B |= (1 << WGM12); // Configure timer 1 for CTC mode
 294:	8e b5       	in	r24, 0x2e	; 46
 296:	88 60       	ori	r24, 0x08	; 8
 298:	8e bd       	out	0x2e, r24	; 46
	TIMSK |= (1 << OCIE1A); // Enable CTC interrupt
 29a:	87 b7       	in	r24, 0x37	; 55
 29c:	80 61       	ori	r24, 0x10	; 16
 29e:	87 bf       	out	0x37, r24	; 55
	OCR1A = delay_count; // Set initial delay value
 2a0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 2a4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2a8:	9b bd       	out	0x2b, r25	; 43
 2aa:	8a bd       	out	0x2a, r24	; 42
	
	TCCR1B |= ((1 << CS10) | (1 << CS11)); // Start timer at Fcpu / 64
 2ac:	8e b5       	in	r24, 0x2e	; 46
 2ae:	83 60       	ori	r24, 0x03	; 3
 2b0:	8e bd       	out	0x2e, r24	; 46
 2b2:	08 95       	ret

000002b4 <init_interrupts>:
}

//init echo interrupt for ultrasone sensor
void init_interrupts(){
	// INIT Interrupt Hardware
	EICRA |= 0b00000010; // INT0 falling edge
 2b4:	ea e6       	ldi	r30, 0x6A	; 106
 2b6:	f0 e0       	ldi	r31, 0x00	; 0
 2b8:	80 81       	ld	r24, Z
 2ba:	82 60       	ori	r24, 0x02	; 2
 2bc:	80 83       	st	Z, r24
	EIMSK |= 0x01; // Enable INT0
 2be:	89 b7       	in	r24, 0x39	; 57
 2c0:	81 60       	ori	r24, 0x01	; 1
 2c2:	89 bf       	out	0x39, r24	; 57

	// enable global interrupt system
	sei();
 2c4:	78 94       	sei
 2c6:	08 95       	ret

000002c8 <init_ultrasoon>:
	
	TCCR1B |= ((1 << CS10) | (1 << CS11)); // Start timer at Fcpu / 64
}

void init_ultrasoon(){
	DDRD = 0b00000110; // SET D0 AS INPUT (ECHO) AND D1 AS OUTPUT (TRIG)
 2c8:	86 e0       	ldi	r24, 0x06	; 6
 2ca:	81 bb       	out	0x11, r24	; 17
	
	TCCR3A = 0;
 2cc:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
	TCCR3B = 0;
 2d0:	ea e8       	ldi	r30, 0x8A	; 138
 2d2:	f0 e0       	ldi	r31, 0x00	; 0
 2d4:	10 82       	st	Z, r1
	TCNT3 = 0;
 2d6:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 2da:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	
	TCCR3B |= (1 << CS30);
 2de:	80 81       	ld	r24, Z
 2e0:	81 60       	ori	r24, 0x01	; 1
 2e2:	80 83       	st	Z, r24
	init_interrupts();
 2e4:	e7 cf       	rjmp	.-50     	; 0x2b4 <init_interrupts>
 2e6:	08 95       	ret

000002e8 <init_leds>:
	// enable global interrupt system
	sei();
}

void init_leds(){
	DDRB |= BIT(7);
 2e8:	87 b3       	in	r24, 0x17	; 23
 2ea:	80 68       	ori	r24, 0x80	; 128
 2ec:	87 bb       	out	0x17, r24	; 23
	DDRB |= BIT(4);
 2ee:	87 b3       	in	r24, 0x17	; 23
 2f0:	80 61       	ori	r24, 0x10	; 16
 2f2:	87 bb       	out	0x17, r24	; 23
	
	TCCR2 |= (1 << WGM20) | (1 << COM21) | (1 << CS20);
 2f4:	85 b5       	in	r24, 0x25	; 37
 2f6:	81 66       	ori	r24, 0x61	; 97
 2f8:	85 bd       	out	0x25, r24	; 37
	TCCR0 |= (1 << WGM00) | (1 << COM01) | (1 << CS00);
 2fa:	83 b7       	in	r24, 0x33	; 51
 2fc:	81 66       	ori	r24, 0x61	; 97
 2fe:	83 bf       	out	0x33, r24	; 51
 300:	08 95       	ret

00000302 <display_text>:
}

void display_text(char *str) {
 302:	cf 93       	push	r28
 304:	df 93       	push	r29
 306:	ec 01       	movw	r28, r24
	for (;*str; str++) {
 308:	02 c0       	rjmp	.+4      	; 0x30e <display_text+0xc>
		lcd_writeChar(*str);
 30a:	8d df       	rcall	.-230    	; 0x226 <lcd_writeChar>
	TCCR2 |= (1 << WGM20) | (1 << COM21) | (1 << CS20);
	TCCR0 |= (1 << WGM00) | (1 << COM01) | (1 << CS00);
}

void display_text(char *str) {
	for (;*str; str++) {
 30c:	21 96       	adiw	r28, 0x01	; 1
 30e:	88 81       	ld	r24, Y
 310:	81 11       	cpse	r24, r1
 312:	fb cf       	rjmp	.-10     	; 0x30a <display_text+0x8>
		lcd_writeChar(*str);
	}
}
 314:	df 91       	pop	r29
 316:	cf 91       	pop	r28
 318:	08 95       	ret

0000031a <set_cursor>:

void set_cursor(int position){
	unsigned char p = 0x80 + position;
	lcd_write_command(p);
 31a:	80 58       	subi	r24, 0x80	; 128
 31c:	74 cf       	rjmp	.-280    	; 0x206 <lcd_write_command>
 31e:	08 95       	ret

00000320 <send_pulse>:
}


void send_pulse(){
	// Start Timer 3
	TCCR3B |= (1 << CS30);
 320:	ea e8       	ldi	r30, 0x8A	; 138
 322:	f0 e0       	ldi	r31, 0x00	; 0
 324:	80 81       	ld	r24, Z
 326:	81 60       	ori	r24, 0x01	; 1
 328:	80 83       	st	Z, r24
	TCNT3 = 0;
 32a:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 32e:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	
	PORTD |= BIT(1);
 332:	82 b3       	in	r24, 0x12	; 18
 334:	82 60       	ori	r24, 0x02	; 2
 336:	82 bb       	out	0x12, r24	; 18
	wait_micro(10); // Send a pulse of minimal timer period 10us, this will make the Ultrasonic module to send a burst of data.
 338:	8a e0       	ldi	r24, 0x0A	; 10
 33a:	90 e0       	ldi	r25, 0x00	; 0
 33c:	44 df       	rcall	.-376    	; 0x1c6 <wait_micro>
	PORTD ^= BIT(1);
 33e:	92 b3       	in	r25, 0x12	; 18
 340:	82 e0       	ldi	r24, 0x02	; 2
 342:	89 27       	eor	r24, r25
 344:	82 bb       	out	0x12, r24	; 18
 346:	08 95       	ret

00000348 <control_rgb_color>:
}

void control_rgb_color(){
 348:	cf 92       	push	r12
 34a:	df 92       	push	r13
 34c:	ef 92       	push	r14
 34e:	ff 92       	push	r15
	if (distance < MIN_BUZZER_THRESHOLD && distance >= 0) { //very close for ultrasone sensor
 350:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <distance>
 354:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <distance+0x1>
 358:	88 35       	cpi	r24, 0x58	; 88
 35a:	9b 41       	sbci	r25, 0x1B	; 27
 35c:	64 f4       	brge	.+24     	; 0x376 <control_rgb_color+0x2e>
 35e:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <distance>
 362:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <distance+0x1>
 366:	99 23       	and	r25, r25
 368:	34 f0       	brlt	.+12     	; 0x376 <control_rgb_color+0x2e>
		valueRed = 255;
 36a:	8f ef       	ldi	r24, 0xFF	; 255
 36c:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <valueRed>
		valueGreen = 0;
 370:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <valueGreen>
 374:	3e c0       	rjmp	.+124    	; 0x3f2 <control_rgb_color+0xaa>
		} else if (distance >= MAX_BUZZER_THRESHOLD || distance < 0) { //too far for ultrasone sensor
 376:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <distance>
 37a:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <distance+0x1>
 37e:	80 33       	cpi	r24, 0x30	; 48
 380:	95 47       	sbci	r25, 0x75	; 117
 382:	34 f4       	brge	.+12     	; 0x390 <control_rgb_color+0x48>
 384:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <distance>
 388:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <distance+0x1>
 38c:	99 23       	and	r25, r25
 38e:	34 f4       	brge	.+12     	; 0x39c <control_rgb_color+0x54>
		valueRed = 0;
 390:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <valueRed>
		valueGreen = 255;
 394:	8f ef       	ldi	r24, 0xFF	; 255
 396:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <valueGreen>
 39a:	2b c0       	rjmp	.+86     	; 0x3f2 <control_rgb_color+0xaa>
		} else { //somewhere in between
		float ratio = (float)(distance - MIN_BUZZER_THRESHOLD) / (float)(MAX_BUZZER_THRESHOLD - MIN_BUZZER_THRESHOLD);
 39c:	60 91 2e 01 	lds	r22, 0x012E	; 0x80012e <distance>
 3a0:	70 91 2f 01 	lds	r23, 0x012F	; 0x80012f <distance+0x1>
 3a4:	68 55       	subi	r22, 0x58	; 88
 3a6:	7b 41       	sbci	r23, 0x1B	; 27
 3a8:	07 2e       	mov	r0, r23
 3aa:	00 0c       	add	r0, r0
 3ac:	88 0b       	sbc	r24, r24
 3ae:	99 0b       	sbc	r25, r25
 3b0:	84 d1       	rcall	.+776    	; 0x6ba <__floatsisf>
 3b2:	20 e0       	ldi	r18, 0x00	; 0
 3b4:	30 eb       	ldi	r19, 0xB0	; 176
 3b6:	43 eb       	ldi	r20, 0xB3	; 179
 3b8:	56 e4       	ldi	r21, 0x46	; 70
 3ba:	e9 d0       	rcall	.+466    	; 0x58e <__divsf3>
 3bc:	6b 01       	movw	r12, r22
 3be:	7c 01       	movw	r14, r24
		valueRed = 255 * (1 - ratio);
 3c0:	9b 01       	movw	r18, r22
 3c2:	ac 01       	movw	r20, r24
 3c4:	60 e0       	ldi	r22, 0x00	; 0
 3c6:	70 e0       	ldi	r23, 0x00	; 0
 3c8:	80 e8       	ldi	r24, 0x80	; 128
 3ca:	9f e3       	ldi	r25, 0x3F	; 63
 3cc:	7b d0       	rcall	.+246    	; 0x4c4 <__subsf3>
 3ce:	20 e0       	ldi	r18, 0x00	; 0
 3d0:	30 e0       	ldi	r19, 0x00	; 0
 3d2:	4f e7       	ldi	r20, 0x7F	; 127
 3d4:	53 e4       	ldi	r21, 0x43	; 67
 3d6:	fd d1       	rcall	.+1018   	; 0x7d2 <__mulsf3>
 3d8:	42 d1       	rcall	.+644    	; 0x65e <__fixunssfsi>
 3da:	60 93 2d 01 	sts	0x012D, r22	; 0x80012d <valueRed>
		valueGreen = 255 * ratio;
 3de:	20 e0       	ldi	r18, 0x00	; 0
 3e0:	30 e0       	ldi	r19, 0x00	; 0
 3e2:	4f e7       	ldi	r20, 0x7F	; 127
 3e4:	53 e4       	ldi	r21, 0x43	; 67
 3e6:	c7 01       	movw	r24, r14
 3e8:	b6 01       	movw	r22, r12
 3ea:	f3 d1       	rcall	.+998    	; 0x7d2 <__mulsf3>
 3ec:	38 d1       	rcall	.+624    	; 0x65e <__fixunssfsi>
 3ee:	60 93 2c 01 	sts	0x012C, r22	; 0x80012c <valueGreen>
	}
	
	OCR2 = valueRed;
 3f2:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <valueRed>
 3f6:	83 bd       	out	0x23, r24	; 35
	OCR0 = valueGreen;
 3f8:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <valueGreen>
 3fc:	81 bf       	out	0x31, r24	; 49
}
 3fe:	ff 90       	pop	r15
 400:	ef 90       	pop	r14
 402:	df 90       	pop	r13
 404:	cf 90       	pop	r12
 406:	08 95       	ret

00000408 <main>:

int bool = 0;

int main(void)
{	
 408:	cf 93       	push	r28
 40a:	df 93       	push	r29
 40c:	cd b7       	in	r28, 0x3d	; 61
 40e:	de b7       	in	r29, 0x3e	; 62
 410:	c8 5c       	subi	r28, 0xC8	; 200
 412:	d1 09       	sbc	r29, r1
 414:	0f b6       	in	r0, 0x3f	; 63
 416:	f8 94       	cli
 418:	de bf       	out	0x3e, r29	; 62
 41a:	0f be       	out	0x3f, r0	; 63
 41c:	cd bf       	out	0x3d, r28	; 61
	init_leds();
 41e:	64 df       	rcall	.-312    	; 0x2e8 <init_leds>
	
	init_4bits_mode();
 420:	15 df       	rcall	.-470    	; 0x24c <init_4bits_mode>
	char buffer[200];
	
	init_buzzer();
 422:	33 df       	rcall	.-410    	; 0x28a <init_buzzer>
 424:	51 df       	rcall	.-350    	; 0x2c8 <init_ultrasoon>
	init_ultrasoon();
 426:	82 b3       	in	r24, 0x12	; 18
	
	PORTD |= BIT(2);
 428:	84 60       	ori	r24, 0x04	; 4
 42a:	82 bb       	out	0x12, r24	; 18

	while (1){
		send_pulse();
 42c:	79 df       	rcall	.-270    	; 0x320 <send_pulse>
 42e:	8a ef       	ldi	r24, 0xFA	; 250
		wait(250);
 430:	90 e0       	ldi	r25, 0x00	; 0
 432:	ba de       	rcall	.-652    	; 0x1a8 <wait>
 434:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <distance>
		
		// getting a value from the ultrasone sensor
		if (distance > 0){
 438:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <distance+0x1>
 43c:	18 16       	cp	r1, r24
 43e:	19 06       	cpc	r1, r25
 440:	34 f5       	brge	.+76     	; 0x48e <main+0x86>
 442:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <__data_end+0x1>
			bool = 0;
 446:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <__data_end>
 44a:	1c df       	rcall	.-456    	; 0x284 <clear_lcd>
			clear_lcd();
 44c:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <distance>
			
			//convert time to cm
			int distance_cm = (distance - 2000) / 420;
 450:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <distance+0x1>
 454:	80 5d       	subi	r24, 0xD0	; 208
 456:	97 40       	sbci	r25, 0x07	; 7
 458:	64 ea       	ldi	r22, 0xA4	; 164
 45a:	71 e0       	ldi	r23, 0x01	; 1
 45c:	1d d2       	rcall	.+1082   	; 0x898 <__divmodhi4>
 45e:	82 e0       	ldi	r24, 0x02	; 2
 460:	91 e0       	ldi	r25, 0x01	; 1
			
			sprintf(buffer, "%d%s", distance_cm, " cm");
 462:	9f 93       	push	r25
 464:	8f 93       	push	r24
 466:	7f 93       	push	r23
 468:	6f 93       	push	r22
 46a:	86 e0       	ldi	r24, 0x06	; 6
 46c:	91 e0       	ldi	r25, 0x01	; 1
 46e:	9f 93       	push	r25
 470:	8f 93       	push	r24
 472:	8e 01       	movw	r16, r28
 474:	0f 5f       	subi	r16, 0xFF	; 255
 476:	1f 4f       	sbci	r17, 0xFF	; 255
 478:	1f 93       	push	r17
 47a:	0f 93       	push	r16
 47c:	34 d2       	rcall	.+1128   	; 0x8e6 <sprintf>
 47e:	c8 01       	movw	r24, r16
			display_text(buffer);
 480:	40 df       	rcall	.-384    	; 0x302 <display_text>
 482:	0f b6       	in	r0, 0x3f	; 63
 484:	f8 94       	cli
 486:	de bf       	out	0x3e, r29	; 62
 488:	0f be       	out	0x3f, r0	; 63
 48a:	cd bf       	out	0x3d, r28	; 61
 48c:	19 c0       	rjmp	.+50     	; 0x4c0 <main+0xb8>
 48e:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <__data_end>
		} else { // object too far for te ultrasone sensor
			if (!bool){
 492:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <__data_end+0x1>
 496:	89 2b       	or	r24, r25
 498:	99 f4       	brne	.+38     	; 0x4c0 <main+0xb8>
				clear_lcd();
 49a:	f4 de       	rcall	.-536    	; 0x284 <clear_lcd>
 49c:	8b e0       	ldi	r24, 0x0B	; 11
				display_text("Yallah achteruit");
 49e:	91 e0       	ldi	r25, 0x01	; 1
 4a0:	30 df       	rcall	.-416    	; 0x302 <display_text>
 4a2:	88 e2       	ldi	r24, 0x28	; 40
				set_cursor(40);
 4a4:	90 e0       	ldi	r25, 0x00	; 0
 4a6:	39 df       	rcall	.-398    	; 0x31a <set_cursor>
 4a8:	8c e1       	ldi	r24, 0x1C	; 28
				display_text("gaan, oulleh!");
 4aa:	91 e0       	ldi	r25, 0x01	; 1
 4ac:	2a df       	rcall	.-428    	; 0x302 <display_text>
 4ae:	80 e0       	ldi	r24, 0x00	; 0
 4b0:	90 e0       	ldi	r25, 0x00	; 0
				set_cursor(0);
 4b2:	33 df       	rcall	.-410    	; 0x31a <set_cursor>
 4b4:	81 e0       	ldi	r24, 0x01	; 1
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <__data_end+0x1>
				bool = 1;
 4bc:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__data_end>
 4c0:	43 df       	rcall	.-378    	; 0x348 <control_rgb_color>
 4c2:	b4 cf       	rjmp	.-152    	; 0x42c <main+0x24>

000004c4 <__subsf3>:
 4c4:	50 58       	subi	r21, 0x80	; 128

000004c6 <__addsf3>:
			}
		}
		control_rgb_color();
 4c6:	bb 27       	eor	r27, r27
 4c8:	aa 27       	eor	r26, r26
	}
 4ca:	0e d0       	rcall	.+28     	; 0x4e8 <__addsf3x>
 4cc:	48 c1       	rjmp	.+656    	; 0x75e <__fp_round>
 4ce:	39 d1       	rcall	.+626    	; 0x742 <__fp_pscA>
 4d0:	30 f0       	brcs	.+12     	; 0x4de <__addsf3+0x18>
 4d2:	3e d1       	rcall	.+636    	; 0x750 <__fp_pscB>
 4d4:	20 f0       	brcs	.+8      	; 0x4de <__addsf3+0x18>
 4d6:	31 f4       	brne	.+12     	; 0x4e4 <__addsf3+0x1e>
 4d8:	9f 3f       	cpi	r25, 0xFF	; 255
 4da:	11 f4       	brne	.+4      	; 0x4e0 <__addsf3+0x1a>
 4dc:	1e f4       	brtc	.+6      	; 0x4e4 <__addsf3+0x1e>
 4de:	2e c1       	rjmp	.+604    	; 0x73c <__fp_nan>
 4e0:	0e f4       	brtc	.+2      	; 0x4e4 <__addsf3+0x1e>
 4e2:	e0 95       	com	r30
 4e4:	e7 fb       	bst	r30, 7
 4e6:	24 c1       	rjmp	.+584    	; 0x730 <__fp_inf>

000004e8 <__addsf3x>:
 4e8:	e9 2f       	mov	r30, r25
 4ea:	4a d1       	rcall	.+660    	; 0x780 <__fp_split3>
 4ec:	80 f3       	brcs	.-32     	; 0x4ce <__addsf3+0x8>
 4ee:	ba 17       	cp	r27, r26
 4f0:	62 07       	cpc	r22, r18
 4f2:	73 07       	cpc	r23, r19
 4f4:	84 07       	cpc	r24, r20
 4f6:	95 07       	cpc	r25, r21
 4f8:	18 f0       	brcs	.+6      	; 0x500 <__addsf3x+0x18>
 4fa:	71 f4       	brne	.+28     	; 0x518 <__addsf3x+0x30>
 4fc:	9e f5       	brtc	.+102    	; 0x564 <__addsf3x+0x7c>
 4fe:	62 c1       	rjmp	.+708    	; 0x7c4 <__fp_zero>
 500:	0e f4       	brtc	.+2      	; 0x504 <__addsf3x+0x1c>
 502:	e0 95       	com	r30
 504:	0b 2e       	mov	r0, r27
 506:	ba 2f       	mov	r27, r26
 508:	a0 2d       	mov	r26, r0
 50a:	0b 01       	movw	r0, r22
 50c:	b9 01       	movw	r22, r18
 50e:	90 01       	movw	r18, r0
 510:	0c 01       	movw	r0, r24
 512:	ca 01       	movw	r24, r20
 514:	a0 01       	movw	r20, r0
 516:	11 24       	eor	r1, r1
 518:	ff 27       	eor	r31, r31
 51a:	59 1b       	sub	r21, r25
 51c:	99 f0       	breq	.+38     	; 0x544 <__addsf3x+0x5c>
 51e:	59 3f       	cpi	r21, 0xF9	; 249
 520:	50 f4       	brcc	.+20     	; 0x536 <__addsf3x+0x4e>
 522:	50 3e       	cpi	r21, 0xE0	; 224
 524:	68 f1       	brcs	.+90     	; 0x580 <__addsf3x+0x98>
 526:	1a 16       	cp	r1, r26
 528:	f0 40       	sbci	r31, 0x00	; 0
 52a:	a2 2f       	mov	r26, r18
 52c:	23 2f       	mov	r18, r19
 52e:	34 2f       	mov	r19, r20
 530:	44 27       	eor	r20, r20
 532:	58 5f       	subi	r21, 0xF8	; 248
 534:	f3 cf       	rjmp	.-26     	; 0x51c <__addsf3x+0x34>
 536:	46 95       	lsr	r20
 538:	37 95       	ror	r19
 53a:	27 95       	ror	r18
 53c:	a7 95       	ror	r26
 53e:	f0 40       	sbci	r31, 0x00	; 0
 540:	53 95       	inc	r21
 542:	c9 f7       	brne	.-14     	; 0x536 <__addsf3x+0x4e>
 544:	7e f4       	brtc	.+30     	; 0x564 <__addsf3x+0x7c>
 546:	1f 16       	cp	r1, r31
 548:	ba 0b       	sbc	r27, r26
 54a:	62 0b       	sbc	r22, r18
 54c:	73 0b       	sbc	r23, r19
 54e:	84 0b       	sbc	r24, r20
 550:	ba f0       	brmi	.+46     	; 0x580 <__addsf3x+0x98>
 552:	91 50       	subi	r25, 0x01	; 1
 554:	a1 f0       	breq	.+40     	; 0x57e <__addsf3x+0x96>
 556:	ff 0f       	add	r31, r31
 558:	bb 1f       	adc	r27, r27
 55a:	66 1f       	adc	r22, r22
 55c:	77 1f       	adc	r23, r23
 55e:	88 1f       	adc	r24, r24
 560:	c2 f7       	brpl	.-16     	; 0x552 <__addsf3x+0x6a>
 562:	0e c0       	rjmp	.+28     	; 0x580 <__addsf3x+0x98>
 564:	ba 0f       	add	r27, r26
 566:	62 1f       	adc	r22, r18
 568:	73 1f       	adc	r23, r19
 56a:	84 1f       	adc	r24, r20
 56c:	48 f4       	brcc	.+18     	; 0x580 <__addsf3x+0x98>
 56e:	87 95       	ror	r24
 570:	77 95       	ror	r23
 572:	67 95       	ror	r22
 574:	b7 95       	ror	r27
 576:	f7 95       	ror	r31
 578:	9e 3f       	cpi	r25, 0xFE	; 254
 57a:	08 f0       	brcs	.+2      	; 0x57e <__addsf3x+0x96>
 57c:	b3 cf       	rjmp	.-154    	; 0x4e4 <__addsf3+0x1e>
 57e:	93 95       	inc	r25
 580:	88 0f       	add	r24, r24
 582:	08 f0       	brcs	.+2      	; 0x586 <__addsf3x+0x9e>
 584:	99 27       	eor	r25, r25
 586:	ee 0f       	add	r30, r30
 588:	97 95       	ror	r25
 58a:	87 95       	ror	r24
 58c:	08 95       	ret

0000058e <__divsf3>:
 58e:	0c d0       	rcall	.+24     	; 0x5a8 <__divsf3x>
 590:	e6 c0       	rjmp	.+460    	; 0x75e <__fp_round>
 592:	de d0       	rcall	.+444    	; 0x750 <__fp_pscB>
 594:	40 f0       	brcs	.+16     	; 0x5a6 <__divsf3+0x18>
 596:	d5 d0       	rcall	.+426    	; 0x742 <__fp_pscA>
 598:	30 f0       	brcs	.+12     	; 0x5a6 <__divsf3+0x18>
 59a:	21 f4       	brne	.+8      	; 0x5a4 <__divsf3+0x16>
 59c:	5f 3f       	cpi	r21, 0xFF	; 255
 59e:	19 f0       	breq	.+6      	; 0x5a6 <__divsf3+0x18>
 5a0:	c7 c0       	rjmp	.+398    	; 0x730 <__fp_inf>
 5a2:	51 11       	cpse	r21, r1
 5a4:	10 c1       	rjmp	.+544    	; 0x7c6 <__fp_szero>
 5a6:	ca c0       	rjmp	.+404    	; 0x73c <__fp_nan>

000005a8 <__divsf3x>:
 5a8:	eb d0       	rcall	.+470    	; 0x780 <__fp_split3>
 5aa:	98 f3       	brcs	.-26     	; 0x592 <__divsf3+0x4>

000005ac <__divsf3_pse>:
 5ac:	99 23       	and	r25, r25
 5ae:	c9 f3       	breq	.-14     	; 0x5a2 <__divsf3+0x14>
 5b0:	55 23       	and	r21, r21
 5b2:	b1 f3       	breq	.-20     	; 0x5a0 <__divsf3+0x12>
 5b4:	95 1b       	sub	r25, r21
 5b6:	55 0b       	sbc	r21, r21
 5b8:	bb 27       	eor	r27, r27
 5ba:	aa 27       	eor	r26, r26
 5bc:	62 17       	cp	r22, r18
 5be:	73 07       	cpc	r23, r19
 5c0:	84 07       	cpc	r24, r20
 5c2:	38 f0       	brcs	.+14     	; 0x5d2 <__divsf3_pse+0x26>
 5c4:	9f 5f       	subi	r25, 0xFF	; 255
 5c6:	5f 4f       	sbci	r21, 0xFF	; 255
 5c8:	22 0f       	add	r18, r18
 5ca:	33 1f       	adc	r19, r19
 5cc:	44 1f       	adc	r20, r20
 5ce:	aa 1f       	adc	r26, r26
 5d0:	a9 f3       	breq	.-22     	; 0x5bc <__divsf3_pse+0x10>
 5d2:	33 d0       	rcall	.+102    	; 0x63a <__divsf3_pse+0x8e>
 5d4:	0e 2e       	mov	r0, r30
 5d6:	3a f0       	brmi	.+14     	; 0x5e6 <__divsf3_pse+0x3a>
 5d8:	e0 e8       	ldi	r30, 0x80	; 128
 5da:	30 d0       	rcall	.+96     	; 0x63c <__divsf3_pse+0x90>
 5dc:	91 50       	subi	r25, 0x01	; 1
 5de:	50 40       	sbci	r21, 0x00	; 0
 5e0:	e6 95       	lsr	r30
 5e2:	00 1c       	adc	r0, r0
 5e4:	ca f7       	brpl	.-14     	; 0x5d8 <__divsf3_pse+0x2c>
 5e6:	29 d0       	rcall	.+82     	; 0x63a <__divsf3_pse+0x8e>
 5e8:	fe 2f       	mov	r31, r30
 5ea:	27 d0       	rcall	.+78     	; 0x63a <__divsf3_pse+0x8e>
 5ec:	66 0f       	add	r22, r22
 5ee:	77 1f       	adc	r23, r23
 5f0:	88 1f       	adc	r24, r24
 5f2:	bb 1f       	adc	r27, r27
 5f4:	26 17       	cp	r18, r22
 5f6:	37 07       	cpc	r19, r23
 5f8:	48 07       	cpc	r20, r24
 5fa:	ab 07       	cpc	r26, r27
 5fc:	b0 e8       	ldi	r27, 0x80	; 128
 5fe:	09 f0       	breq	.+2      	; 0x602 <__divsf3_pse+0x56>
 600:	bb 0b       	sbc	r27, r27
 602:	80 2d       	mov	r24, r0
 604:	bf 01       	movw	r22, r30
 606:	ff 27       	eor	r31, r31
 608:	93 58       	subi	r25, 0x83	; 131
 60a:	5f 4f       	sbci	r21, 0xFF	; 255
 60c:	2a f0       	brmi	.+10     	; 0x618 <__divsf3_pse+0x6c>
 60e:	9e 3f       	cpi	r25, 0xFE	; 254
 610:	51 05       	cpc	r21, r1
 612:	68 f0       	brcs	.+26     	; 0x62e <__divsf3_pse+0x82>
 614:	8d c0       	rjmp	.+282    	; 0x730 <__fp_inf>
 616:	d7 c0       	rjmp	.+430    	; 0x7c6 <__fp_szero>
 618:	5f 3f       	cpi	r21, 0xFF	; 255
 61a:	ec f3       	brlt	.-6      	; 0x616 <__divsf3_pse+0x6a>
 61c:	98 3e       	cpi	r25, 0xE8	; 232
 61e:	dc f3       	brlt	.-10     	; 0x616 <__divsf3_pse+0x6a>
 620:	86 95       	lsr	r24
 622:	77 95       	ror	r23
 624:	67 95       	ror	r22
 626:	b7 95       	ror	r27
 628:	f7 95       	ror	r31
 62a:	9f 5f       	subi	r25, 0xFF	; 255
 62c:	c9 f7       	brne	.-14     	; 0x620 <__divsf3_pse+0x74>
 62e:	88 0f       	add	r24, r24
 630:	91 1d       	adc	r25, r1
 632:	96 95       	lsr	r25
 634:	87 95       	ror	r24
 636:	97 f9       	bld	r25, 7
 638:	08 95       	ret
 63a:	e1 e0       	ldi	r30, 0x01	; 1
 63c:	66 0f       	add	r22, r22
 63e:	77 1f       	adc	r23, r23
 640:	88 1f       	adc	r24, r24
 642:	bb 1f       	adc	r27, r27
 644:	62 17       	cp	r22, r18
 646:	73 07       	cpc	r23, r19
 648:	84 07       	cpc	r24, r20
 64a:	ba 07       	cpc	r27, r26
 64c:	20 f0       	brcs	.+8      	; 0x656 <__divsf3_pse+0xaa>
 64e:	62 1b       	sub	r22, r18
 650:	73 0b       	sbc	r23, r19
 652:	84 0b       	sbc	r24, r20
 654:	ba 0b       	sbc	r27, r26
 656:	ee 1f       	adc	r30, r30
 658:	88 f7       	brcc	.-30     	; 0x63c <__divsf3_pse+0x90>
 65a:	e0 95       	com	r30
 65c:	08 95       	ret

0000065e <__fixunssfsi>:
 65e:	98 d0       	rcall	.+304    	; 0x790 <__fp_splitA>
 660:	88 f0       	brcs	.+34     	; 0x684 <__fixunssfsi+0x26>
 662:	9f 57       	subi	r25, 0x7F	; 127
 664:	90 f0       	brcs	.+36     	; 0x68a <__fixunssfsi+0x2c>
 666:	b9 2f       	mov	r27, r25
 668:	99 27       	eor	r25, r25
 66a:	b7 51       	subi	r27, 0x17	; 23
 66c:	a0 f0       	brcs	.+40     	; 0x696 <__fixunssfsi+0x38>
 66e:	d1 f0       	breq	.+52     	; 0x6a4 <__fixunssfsi+0x46>
 670:	66 0f       	add	r22, r22
 672:	77 1f       	adc	r23, r23
 674:	88 1f       	adc	r24, r24
 676:	99 1f       	adc	r25, r25
 678:	1a f0       	brmi	.+6      	; 0x680 <__fixunssfsi+0x22>
 67a:	ba 95       	dec	r27
 67c:	c9 f7       	brne	.-14     	; 0x670 <__fixunssfsi+0x12>
 67e:	12 c0       	rjmp	.+36     	; 0x6a4 <__fixunssfsi+0x46>
 680:	b1 30       	cpi	r27, 0x01	; 1
 682:	81 f0       	breq	.+32     	; 0x6a4 <__fixunssfsi+0x46>
 684:	9f d0       	rcall	.+318    	; 0x7c4 <__fp_zero>
 686:	b1 e0       	ldi	r27, 0x01	; 1
 688:	08 95       	ret
 68a:	9c c0       	rjmp	.+312    	; 0x7c4 <__fp_zero>
 68c:	67 2f       	mov	r22, r23
 68e:	78 2f       	mov	r23, r24
 690:	88 27       	eor	r24, r24
 692:	b8 5f       	subi	r27, 0xF8	; 248
 694:	39 f0       	breq	.+14     	; 0x6a4 <__fixunssfsi+0x46>
 696:	b9 3f       	cpi	r27, 0xF9	; 249
 698:	cc f3       	brlt	.-14     	; 0x68c <__fixunssfsi+0x2e>
 69a:	86 95       	lsr	r24
 69c:	77 95       	ror	r23
 69e:	67 95       	ror	r22
 6a0:	b3 95       	inc	r27
 6a2:	d9 f7       	brne	.-10     	; 0x69a <__fixunssfsi+0x3c>
 6a4:	3e f4       	brtc	.+14     	; 0x6b4 <__fixunssfsi+0x56>
 6a6:	90 95       	com	r25
 6a8:	80 95       	com	r24
 6aa:	70 95       	com	r23
 6ac:	61 95       	neg	r22
 6ae:	7f 4f       	sbci	r23, 0xFF	; 255
 6b0:	8f 4f       	sbci	r24, 0xFF	; 255
 6b2:	9f 4f       	sbci	r25, 0xFF	; 255
 6b4:	08 95       	ret

000006b6 <__floatunsisf>:
 6b6:	e8 94       	clt
 6b8:	09 c0       	rjmp	.+18     	; 0x6cc <__floatsisf+0x12>

000006ba <__floatsisf>:
 6ba:	97 fb       	bst	r25, 7
 6bc:	3e f4       	brtc	.+14     	; 0x6cc <__floatsisf+0x12>
 6be:	90 95       	com	r25
 6c0:	80 95       	com	r24
 6c2:	70 95       	com	r23
 6c4:	61 95       	neg	r22
 6c6:	7f 4f       	sbci	r23, 0xFF	; 255
 6c8:	8f 4f       	sbci	r24, 0xFF	; 255
 6ca:	9f 4f       	sbci	r25, 0xFF	; 255
 6cc:	99 23       	and	r25, r25
 6ce:	a9 f0       	breq	.+42     	; 0x6fa <__floatsisf+0x40>
 6d0:	f9 2f       	mov	r31, r25
 6d2:	96 e9       	ldi	r25, 0x96	; 150
 6d4:	bb 27       	eor	r27, r27
 6d6:	93 95       	inc	r25
 6d8:	f6 95       	lsr	r31
 6da:	87 95       	ror	r24
 6dc:	77 95       	ror	r23
 6de:	67 95       	ror	r22
 6e0:	b7 95       	ror	r27
 6e2:	f1 11       	cpse	r31, r1
 6e4:	f8 cf       	rjmp	.-16     	; 0x6d6 <__floatsisf+0x1c>
 6e6:	fa f4       	brpl	.+62     	; 0x726 <__floatsisf+0x6c>
 6e8:	bb 0f       	add	r27, r27
 6ea:	11 f4       	brne	.+4      	; 0x6f0 <__floatsisf+0x36>
 6ec:	60 ff       	sbrs	r22, 0
 6ee:	1b c0       	rjmp	.+54     	; 0x726 <__floatsisf+0x6c>
 6f0:	6f 5f       	subi	r22, 0xFF	; 255
 6f2:	7f 4f       	sbci	r23, 0xFF	; 255
 6f4:	8f 4f       	sbci	r24, 0xFF	; 255
 6f6:	9f 4f       	sbci	r25, 0xFF	; 255
 6f8:	16 c0       	rjmp	.+44     	; 0x726 <__floatsisf+0x6c>
 6fa:	88 23       	and	r24, r24
 6fc:	11 f0       	breq	.+4      	; 0x702 <__floatsisf+0x48>
 6fe:	96 e9       	ldi	r25, 0x96	; 150
 700:	11 c0       	rjmp	.+34     	; 0x724 <__floatsisf+0x6a>
 702:	77 23       	and	r23, r23
 704:	21 f0       	breq	.+8      	; 0x70e <__floatsisf+0x54>
 706:	9e e8       	ldi	r25, 0x8E	; 142
 708:	87 2f       	mov	r24, r23
 70a:	76 2f       	mov	r23, r22
 70c:	05 c0       	rjmp	.+10     	; 0x718 <__floatsisf+0x5e>
 70e:	66 23       	and	r22, r22
 710:	71 f0       	breq	.+28     	; 0x72e <__floatsisf+0x74>
 712:	96 e8       	ldi	r25, 0x86	; 134
 714:	86 2f       	mov	r24, r22
 716:	70 e0       	ldi	r23, 0x00	; 0
 718:	60 e0       	ldi	r22, 0x00	; 0
 71a:	2a f0       	brmi	.+10     	; 0x726 <__floatsisf+0x6c>
 71c:	9a 95       	dec	r25
 71e:	66 0f       	add	r22, r22
 720:	77 1f       	adc	r23, r23
 722:	88 1f       	adc	r24, r24
 724:	da f7       	brpl	.-10     	; 0x71c <__floatsisf+0x62>
 726:	88 0f       	add	r24, r24
 728:	96 95       	lsr	r25
 72a:	87 95       	ror	r24
 72c:	97 f9       	bld	r25, 7
 72e:	08 95       	ret

00000730 <__fp_inf>:
 730:	97 f9       	bld	r25, 7
 732:	9f 67       	ori	r25, 0x7F	; 127
 734:	80 e8       	ldi	r24, 0x80	; 128
 736:	70 e0       	ldi	r23, 0x00	; 0
 738:	60 e0       	ldi	r22, 0x00	; 0
 73a:	08 95       	ret

0000073c <__fp_nan>:
 73c:	9f ef       	ldi	r25, 0xFF	; 255
 73e:	80 ec       	ldi	r24, 0xC0	; 192
 740:	08 95       	ret

00000742 <__fp_pscA>:
 742:	00 24       	eor	r0, r0
 744:	0a 94       	dec	r0
 746:	16 16       	cp	r1, r22
 748:	17 06       	cpc	r1, r23
 74a:	18 06       	cpc	r1, r24
 74c:	09 06       	cpc	r0, r25
 74e:	08 95       	ret

00000750 <__fp_pscB>:
 750:	00 24       	eor	r0, r0
 752:	0a 94       	dec	r0
 754:	12 16       	cp	r1, r18
 756:	13 06       	cpc	r1, r19
 758:	14 06       	cpc	r1, r20
 75a:	05 06       	cpc	r0, r21
 75c:	08 95       	ret

0000075e <__fp_round>:
 75e:	09 2e       	mov	r0, r25
 760:	03 94       	inc	r0
 762:	00 0c       	add	r0, r0
 764:	11 f4       	brne	.+4      	; 0x76a <__fp_round+0xc>
 766:	88 23       	and	r24, r24
 768:	52 f0       	brmi	.+20     	; 0x77e <__fp_round+0x20>
 76a:	bb 0f       	add	r27, r27
 76c:	40 f4       	brcc	.+16     	; 0x77e <__fp_round+0x20>
 76e:	bf 2b       	or	r27, r31
 770:	11 f4       	brne	.+4      	; 0x776 <__fp_round+0x18>
 772:	60 ff       	sbrs	r22, 0
 774:	04 c0       	rjmp	.+8      	; 0x77e <__fp_round+0x20>
 776:	6f 5f       	subi	r22, 0xFF	; 255
 778:	7f 4f       	sbci	r23, 0xFF	; 255
 77a:	8f 4f       	sbci	r24, 0xFF	; 255
 77c:	9f 4f       	sbci	r25, 0xFF	; 255
 77e:	08 95       	ret

00000780 <__fp_split3>:
 780:	57 fd       	sbrc	r21, 7
 782:	90 58       	subi	r25, 0x80	; 128
 784:	44 0f       	add	r20, r20
 786:	55 1f       	adc	r21, r21
 788:	59 f0       	breq	.+22     	; 0x7a0 <__fp_splitA+0x10>
 78a:	5f 3f       	cpi	r21, 0xFF	; 255
 78c:	71 f0       	breq	.+28     	; 0x7aa <__fp_splitA+0x1a>
 78e:	47 95       	ror	r20

00000790 <__fp_splitA>:
 790:	88 0f       	add	r24, r24
 792:	97 fb       	bst	r25, 7
 794:	99 1f       	adc	r25, r25
 796:	61 f0       	breq	.+24     	; 0x7b0 <__fp_splitA+0x20>
 798:	9f 3f       	cpi	r25, 0xFF	; 255
 79a:	79 f0       	breq	.+30     	; 0x7ba <__fp_splitA+0x2a>
 79c:	87 95       	ror	r24
 79e:	08 95       	ret
 7a0:	12 16       	cp	r1, r18
 7a2:	13 06       	cpc	r1, r19
 7a4:	14 06       	cpc	r1, r20
 7a6:	55 1f       	adc	r21, r21
 7a8:	f2 cf       	rjmp	.-28     	; 0x78e <__fp_split3+0xe>
 7aa:	46 95       	lsr	r20
 7ac:	f1 df       	rcall	.-30     	; 0x790 <__fp_splitA>
 7ae:	08 c0       	rjmp	.+16     	; 0x7c0 <__fp_splitA+0x30>
 7b0:	16 16       	cp	r1, r22
 7b2:	17 06       	cpc	r1, r23
 7b4:	18 06       	cpc	r1, r24
 7b6:	99 1f       	adc	r25, r25
 7b8:	f1 cf       	rjmp	.-30     	; 0x79c <__fp_splitA+0xc>
 7ba:	86 95       	lsr	r24
 7bc:	71 05       	cpc	r23, r1
 7be:	61 05       	cpc	r22, r1
 7c0:	08 94       	sec
 7c2:	08 95       	ret

000007c4 <__fp_zero>:
 7c4:	e8 94       	clt

000007c6 <__fp_szero>:
 7c6:	bb 27       	eor	r27, r27
 7c8:	66 27       	eor	r22, r22
 7ca:	77 27       	eor	r23, r23
 7cc:	cb 01       	movw	r24, r22
 7ce:	97 f9       	bld	r25, 7
 7d0:	08 95       	ret

000007d2 <__mulsf3>:
 7d2:	0b d0       	rcall	.+22     	; 0x7ea <__mulsf3x>
 7d4:	c4 cf       	rjmp	.-120    	; 0x75e <__fp_round>
 7d6:	b5 df       	rcall	.-150    	; 0x742 <__fp_pscA>
 7d8:	28 f0       	brcs	.+10     	; 0x7e4 <__mulsf3+0x12>
 7da:	ba df       	rcall	.-140    	; 0x750 <__fp_pscB>
 7dc:	18 f0       	brcs	.+6      	; 0x7e4 <__mulsf3+0x12>
 7de:	95 23       	and	r25, r21
 7e0:	09 f0       	breq	.+2      	; 0x7e4 <__mulsf3+0x12>
 7e2:	a6 cf       	rjmp	.-180    	; 0x730 <__fp_inf>
 7e4:	ab cf       	rjmp	.-170    	; 0x73c <__fp_nan>
 7e6:	11 24       	eor	r1, r1
 7e8:	ee cf       	rjmp	.-36     	; 0x7c6 <__fp_szero>

000007ea <__mulsf3x>:
 7ea:	ca df       	rcall	.-108    	; 0x780 <__fp_split3>
 7ec:	a0 f3       	brcs	.-24     	; 0x7d6 <__mulsf3+0x4>

000007ee <__mulsf3_pse>:
 7ee:	95 9f       	mul	r25, r21
 7f0:	d1 f3       	breq	.-12     	; 0x7e6 <__mulsf3+0x14>
 7f2:	95 0f       	add	r25, r21
 7f4:	50 e0       	ldi	r21, 0x00	; 0
 7f6:	55 1f       	adc	r21, r21
 7f8:	62 9f       	mul	r22, r18
 7fa:	f0 01       	movw	r30, r0
 7fc:	72 9f       	mul	r23, r18
 7fe:	bb 27       	eor	r27, r27
 800:	f0 0d       	add	r31, r0
 802:	b1 1d       	adc	r27, r1
 804:	63 9f       	mul	r22, r19
 806:	aa 27       	eor	r26, r26
 808:	f0 0d       	add	r31, r0
 80a:	b1 1d       	adc	r27, r1
 80c:	aa 1f       	adc	r26, r26
 80e:	64 9f       	mul	r22, r20
 810:	66 27       	eor	r22, r22
 812:	b0 0d       	add	r27, r0
 814:	a1 1d       	adc	r26, r1
 816:	66 1f       	adc	r22, r22
 818:	82 9f       	mul	r24, r18
 81a:	22 27       	eor	r18, r18
 81c:	b0 0d       	add	r27, r0
 81e:	a1 1d       	adc	r26, r1
 820:	62 1f       	adc	r22, r18
 822:	73 9f       	mul	r23, r19
 824:	b0 0d       	add	r27, r0
 826:	a1 1d       	adc	r26, r1
 828:	62 1f       	adc	r22, r18
 82a:	83 9f       	mul	r24, r19
 82c:	a0 0d       	add	r26, r0
 82e:	61 1d       	adc	r22, r1
 830:	22 1f       	adc	r18, r18
 832:	74 9f       	mul	r23, r20
 834:	33 27       	eor	r19, r19
 836:	a0 0d       	add	r26, r0
 838:	61 1d       	adc	r22, r1
 83a:	23 1f       	adc	r18, r19
 83c:	84 9f       	mul	r24, r20
 83e:	60 0d       	add	r22, r0
 840:	21 1d       	adc	r18, r1
 842:	82 2f       	mov	r24, r18
 844:	76 2f       	mov	r23, r22
 846:	6a 2f       	mov	r22, r26
 848:	11 24       	eor	r1, r1
 84a:	9f 57       	subi	r25, 0x7F	; 127
 84c:	50 40       	sbci	r21, 0x00	; 0
 84e:	8a f0       	brmi	.+34     	; 0x872 <__mulsf3_pse+0x84>
 850:	e1 f0       	breq	.+56     	; 0x88a <__mulsf3_pse+0x9c>
 852:	88 23       	and	r24, r24
 854:	4a f0       	brmi	.+18     	; 0x868 <__mulsf3_pse+0x7a>
 856:	ee 0f       	add	r30, r30
 858:	ff 1f       	adc	r31, r31
 85a:	bb 1f       	adc	r27, r27
 85c:	66 1f       	adc	r22, r22
 85e:	77 1f       	adc	r23, r23
 860:	88 1f       	adc	r24, r24
 862:	91 50       	subi	r25, 0x01	; 1
 864:	50 40       	sbci	r21, 0x00	; 0
 866:	a9 f7       	brne	.-22     	; 0x852 <__mulsf3_pse+0x64>
 868:	9e 3f       	cpi	r25, 0xFE	; 254
 86a:	51 05       	cpc	r21, r1
 86c:	70 f0       	brcs	.+28     	; 0x88a <__mulsf3_pse+0x9c>
 86e:	60 cf       	rjmp	.-320    	; 0x730 <__fp_inf>
 870:	aa cf       	rjmp	.-172    	; 0x7c6 <__fp_szero>
 872:	5f 3f       	cpi	r21, 0xFF	; 255
 874:	ec f3       	brlt	.-6      	; 0x870 <__mulsf3_pse+0x82>
 876:	98 3e       	cpi	r25, 0xE8	; 232
 878:	dc f3       	brlt	.-10     	; 0x870 <__mulsf3_pse+0x82>
 87a:	86 95       	lsr	r24
 87c:	77 95       	ror	r23
 87e:	67 95       	ror	r22
 880:	b7 95       	ror	r27
 882:	f7 95       	ror	r31
 884:	e7 95       	ror	r30
 886:	9f 5f       	subi	r25, 0xFF	; 255
 888:	c1 f7       	brne	.-16     	; 0x87a <__mulsf3_pse+0x8c>
 88a:	fe 2b       	or	r31, r30
 88c:	88 0f       	add	r24, r24
 88e:	91 1d       	adc	r25, r1
 890:	96 95       	lsr	r25
 892:	87 95       	ror	r24
 894:	97 f9       	bld	r25, 7
 896:	08 95       	ret

00000898 <__divmodhi4>:
 898:	97 fb       	bst	r25, 7
 89a:	07 2e       	mov	r0, r23
 89c:	16 f4       	brtc	.+4      	; 0x8a2 <__divmodhi4+0xa>
 89e:	00 94       	com	r0
 8a0:	06 d0       	rcall	.+12     	; 0x8ae <__divmodhi4_neg1>
 8a2:	77 fd       	sbrc	r23, 7
 8a4:	08 d0       	rcall	.+16     	; 0x8b6 <__divmodhi4_neg2>
 8a6:	0b d0       	rcall	.+22     	; 0x8be <__udivmodhi4>
 8a8:	07 fc       	sbrc	r0, 7
 8aa:	05 d0       	rcall	.+10     	; 0x8b6 <__divmodhi4_neg2>
 8ac:	3e f4       	brtc	.+14     	; 0x8bc <__divmodhi4_exit>

000008ae <__divmodhi4_neg1>:
 8ae:	90 95       	com	r25
 8b0:	81 95       	neg	r24
 8b2:	9f 4f       	sbci	r25, 0xFF	; 255
 8b4:	08 95       	ret

000008b6 <__divmodhi4_neg2>:
 8b6:	70 95       	com	r23
 8b8:	61 95       	neg	r22
 8ba:	7f 4f       	sbci	r23, 0xFF	; 255

000008bc <__divmodhi4_exit>:
 8bc:	08 95       	ret

000008be <__udivmodhi4>:
 8be:	aa 1b       	sub	r26, r26
 8c0:	bb 1b       	sub	r27, r27
 8c2:	51 e1       	ldi	r21, 0x11	; 17
 8c4:	07 c0       	rjmp	.+14     	; 0x8d4 <__udivmodhi4_ep>

000008c6 <__udivmodhi4_loop>:
 8c6:	aa 1f       	adc	r26, r26
 8c8:	bb 1f       	adc	r27, r27
 8ca:	a6 17       	cp	r26, r22
 8cc:	b7 07       	cpc	r27, r23
 8ce:	10 f0       	brcs	.+4      	; 0x8d4 <__udivmodhi4_ep>
 8d0:	a6 1b       	sub	r26, r22
 8d2:	b7 0b       	sbc	r27, r23

000008d4 <__udivmodhi4_ep>:
 8d4:	88 1f       	adc	r24, r24
 8d6:	99 1f       	adc	r25, r25
 8d8:	5a 95       	dec	r21
 8da:	a9 f7       	brne	.-22     	; 0x8c6 <__udivmodhi4_loop>
 8dc:	80 95       	com	r24
 8de:	90 95       	com	r25
 8e0:	bc 01       	movw	r22, r24
 8e2:	cd 01       	movw	r24, r26
 8e4:	08 95       	ret

000008e6 <sprintf>:
 8e6:	0f 93       	push	r16
 8e8:	1f 93       	push	r17
 8ea:	cf 93       	push	r28
 8ec:	df 93       	push	r29
 8ee:	cd b7       	in	r28, 0x3d	; 61
 8f0:	de b7       	in	r29, 0x3e	; 62
 8f2:	2e 97       	sbiw	r28, 0x0e	; 14
 8f4:	0f b6       	in	r0, 0x3f	; 63
 8f6:	f8 94       	cli
 8f8:	de bf       	out	0x3e, r29	; 62
 8fa:	0f be       	out	0x3f, r0	; 63
 8fc:	cd bf       	out	0x3d, r28	; 61
 8fe:	0d 89       	ldd	r16, Y+21	; 0x15
 900:	1e 89       	ldd	r17, Y+22	; 0x16
 902:	86 e0       	ldi	r24, 0x06	; 6
 904:	8c 83       	std	Y+4, r24	; 0x04
 906:	1a 83       	std	Y+2, r17	; 0x02
 908:	09 83       	std	Y+1, r16	; 0x01
 90a:	8f ef       	ldi	r24, 0xFF	; 255
 90c:	9f e7       	ldi	r25, 0x7F	; 127
 90e:	9e 83       	std	Y+6, r25	; 0x06
 910:	8d 83       	std	Y+5, r24	; 0x05
 912:	ae 01       	movw	r20, r28
 914:	47 5e       	subi	r20, 0xE7	; 231
 916:	5f 4f       	sbci	r21, 0xFF	; 255
 918:	6f 89       	ldd	r22, Y+23	; 0x17
 91a:	78 8d       	ldd	r23, Y+24	; 0x18
 91c:	ce 01       	movw	r24, r28
 91e:	01 96       	adiw	r24, 0x01	; 1
 920:	10 d0       	rcall	.+32     	; 0x942 <vfprintf>
 922:	ef 81       	ldd	r30, Y+7	; 0x07
 924:	f8 85       	ldd	r31, Y+8	; 0x08
 926:	e0 0f       	add	r30, r16
 928:	f1 1f       	adc	r31, r17
 92a:	10 82       	st	Z, r1
 92c:	2e 96       	adiw	r28, 0x0e	; 14
 92e:	0f b6       	in	r0, 0x3f	; 63
 930:	f8 94       	cli
 932:	de bf       	out	0x3e, r29	; 62
 934:	0f be       	out	0x3f, r0	; 63
 936:	cd bf       	out	0x3d, r28	; 61
 938:	df 91       	pop	r29
 93a:	cf 91       	pop	r28
 93c:	1f 91       	pop	r17
 93e:	0f 91       	pop	r16
 940:	08 95       	ret

00000942 <vfprintf>:
 942:	2f 92       	push	r2
 944:	3f 92       	push	r3
 946:	4f 92       	push	r4
 948:	5f 92       	push	r5
 94a:	6f 92       	push	r6
 94c:	7f 92       	push	r7
 94e:	8f 92       	push	r8
 950:	9f 92       	push	r9
 952:	af 92       	push	r10
 954:	bf 92       	push	r11
 956:	cf 92       	push	r12
 958:	df 92       	push	r13
 95a:	ef 92       	push	r14
 95c:	ff 92       	push	r15
 95e:	0f 93       	push	r16
 960:	1f 93       	push	r17
 962:	cf 93       	push	r28
 964:	df 93       	push	r29
 966:	cd b7       	in	r28, 0x3d	; 61
 968:	de b7       	in	r29, 0x3e	; 62
 96a:	2b 97       	sbiw	r28, 0x0b	; 11
 96c:	0f b6       	in	r0, 0x3f	; 63
 96e:	f8 94       	cli
 970:	de bf       	out	0x3e, r29	; 62
 972:	0f be       	out	0x3f, r0	; 63
 974:	cd bf       	out	0x3d, r28	; 61
 976:	6c 01       	movw	r12, r24
 978:	7b 01       	movw	r14, r22
 97a:	8a 01       	movw	r16, r20
 97c:	fc 01       	movw	r30, r24
 97e:	17 82       	std	Z+7, r1	; 0x07
 980:	16 82       	std	Z+6, r1	; 0x06
 982:	83 81       	ldd	r24, Z+3	; 0x03
 984:	81 ff       	sbrs	r24, 1
 986:	bf c1       	rjmp	.+894    	; 0xd06 <vfprintf+0x3c4>
 988:	ce 01       	movw	r24, r28
 98a:	01 96       	adiw	r24, 0x01	; 1
 98c:	3c 01       	movw	r6, r24
 98e:	f6 01       	movw	r30, r12
 990:	93 81       	ldd	r25, Z+3	; 0x03
 992:	f7 01       	movw	r30, r14
 994:	93 fd       	sbrc	r25, 3
 996:	85 91       	lpm	r24, Z+
 998:	93 ff       	sbrs	r25, 3
 99a:	81 91       	ld	r24, Z+
 99c:	7f 01       	movw	r14, r30
 99e:	88 23       	and	r24, r24
 9a0:	09 f4       	brne	.+2      	; 0x9a4 <vfprintf+0x62>
 9a2:	ad c1       	rjmp	.+858    	; 0xcfe <vfprintf+0x3bc>
 9a4:	85 32       	cpi	r24, 0x25	; 37
 9a6:	39 f4       	brne	.+14     	; 0x9b6 <vfprintf+0x74>
 9a8:	93 fd       	sbrc	r25, 3
 9aa:	85 91       	lpm	r24, Z+
 9ac:	93 ff       	sbrs	r25, 3
 9ae:	81 91       	ld	r24, Z+
 9b0:	7f 01       	movw	r14, r30
 9b2:	85 32       	cpi	r24, 0x25	; 37
 9b4:	21 f4       	brne	.+8      	; 0x9be <vfprintf+0x7c>
 9b6:	b6 01       	movw	r22, r12
 9b8:	90 e0       	ldi	r25, 0x00	; 0
 9ba:	d6 d1       	rcall	.+940    	; 0xd68 <fputc>
 9bc:	e8 cf       	rjmp	.-48     	; 0x98e <vfprintf+0x4c>
 9be:	91 2c       	mov	r9, r1
 9c0:	21 2c       	mov	r2, r1
 9c2:	31 2c       	mov	r3, r1
 9c4:	ff e1       	ldi	r31, 0x1F	; 31
 9c6:	f3 15       	cp	r31, r3
 9c8:	d8 f0       	brcs	.+54     	; 0xa00 <vfprintf+0xbe>
 9ca:	8b 32       	cpi	r24, 0x2B	; 43
 9cc:	79 f0       	breq	.+30     	; 0x9ec <vfprintf+0xaa>
 9ce:	38 f4       	brcc	.+14     	; 0x9de <vfprintf+0x9c>
 9d0:	80 32       	cpi	r24, 0x20	; 32
 9d2:	79 f0       	breq	.+30     	; 0x9f2 <vfprintf+0xb0>
 9d4:	83 32       	cpi	r24, 0x23	; 35
 9d6:	a1 f4       	brne	.+40     	; 0xa00 <vfprintf+0xbe>
 9d8:	23 2d       	mov	r18, r3
 9da:	20 61       	ori	r18, 0x10	; 16
 9dc:	1d c0       	rjmp	.+58     	; 0xa18 <vfprintf+0xd6>
 9de:	8d 32       	cpi	r24, 0x2D	; 45
 9e0:	61 f0       	breq	.+24     	; 0x9fa <vfprintf+0xb8>
 9e2:	80 33       	cpi	r24, 0x30	; 48
 9e4:	69 f4       	brne	.+26     	; 0xa00 <vfprintf+0xbe>
 9e6:	23 2d       	mov	r18, r3
 9e8:	21 60       	ori	r18, 0x01	; 1
 9ea:	16 c0       	rjmp	.+44     	; 0xa18 <vfprintf+0xd6>
 9ec:	83 2d       	mov	r24, r3
 9ee:	82 60       	ori	r24, 0x02	; 2
 9f0:	38 2e       	mov	r3, r24
 9f2:	e3 2d       	mov	r30, r3
 9f4:	e4 60       	ori	r30, 0x04	; 4
 9f6:	3e 2e       	mov	r3, r30
 9f8:	2a c0       	rjmp	.+84     	; 0xa4e <vfprintf+0x10c>
 9fa:	f3 2d       	mov	r31, r3
 9fc:	f8 60       	ori	r31, 0x08	; 8
 9fe:	1d c0       	rjmp	.+58     	; 0xa3a <vfprintf+0xf8>
 a00:	37 fc       	sbrc	r3, 7
 a02:	2d c0       	rjmp	.+90     	; 0xa5e <vfprintf+0x11c>
 a04:	20 ed       	ldi	r18, 0xD0	; 208
 a06:	28 0f       	add	r18, r24
 a08:	2a 30       	cpi	r18, 0x0A	; 10
 a0a:	40 f0       	brcs	.+16     	; 0xa1c <vfprintf+0xda>
 a0c:	8e 32       	cpi	r24, 0x2E	; 46
 a0e:	b9 f4       	brne	.+46     	; 0xa3e <vfprintf+0xfc>
 a10:	36 fc       	sbrc	r3, 6
 a12:	75 c1       	rjmp	.+746    	; 0xcfe <vfprintf+0x3bc>
 a14:	23 2d       	mov	r18, r3
 a16:	20 64       	ori	r18, 0x40	; 64
 a18:	32 2e       	mov	r3, r18
 a1a:	19 c0       	rjmp	.+50     	; 0xa4e <vfprintf+0x10c>
 a1c:	36 fe       	sbrs	r3, 6
 a1e:	06 c0       	rjmp	.+12     	; 0xa2c <vfprintf+0xea>
 a20:	8a e0       	ldi	r24, 0x0A	; 10
 a22:	98 9e       	mul	r9, r24
 a24:	20 0d       	add	r18, r0
 a26:	11 24       	eor	r1, r1
 a28:	92 2e       	mov	r9, r18
 a2a:	11 c0       	rjmp	.+34     	; 0xa4e <vfprintf+0x10c>
 a2c:	ea e0       	ldi	r30, 0x0A	; 10
 a2e:	2e 9e       	mul	r2, r30
 a30:	20 0d       	add	r18, r0
 a32:	11 24       	eor	r1, r1
 a34:	22 2e       	mov	r2, r18
 a36:	f3 2d       	mov	r31, r3
 a38:	f0 62       	ori	r31, 0x20	; 32
 a3a:	3f 2e       	mov	r3, r31
 a3c:	08 c0       	rjmp	.+16     	; 0xa4e <vfprintf+0x10c>
 a3e:	8c 36       	cpi	r24, 0x6C	; 108
 a40:	21 f4       	brne	.+8      	; 0xa4a <vfprintf+0x108>
 a42:	83 2d       	mov	r24, r3
 a44:	80 68       	ori	r24, 0x80	; 128
 a46:	38 2e       	mov	r3, r24
 a48:	02 c0       	rjmp	.+4      	; 0xa4e <vfprintf+0x10c>
 a4a:	88 36       	cpi	r24, 0x68	; 104
 a4c:	41 f4       	brne	.+16     	; 0xa5e <vfprintf+0x11c>
 a4e:	f7 01       	movw	r30, r14
 a50:	93 fd       	sbrc	r25, 3
 a52:	85 91       	lpm	r24, Z+
 a54:	93 ff       	sbrs	r25, 3
 a56:	81 91       	ld	r24, Z+
 a58:	7f 01       	movw	r14, r30
 a5a:	81 11       	cpse	r24, r1
 a5c:	b3 cf       	rjmp	.-154    	; 0x9c4 <vfprintf+0x82>
 a5e:	98 2f       	mov	r25, r24
 a60:	9f 7d       	andi	r25, 0xDF	; 223
 a62:	95 54       	subi	r25, 0x45	; 69
 a64:	93 30       	cpi	r25, 0x03	; 3
 a66:	28 f4       	brcc	.+10     	; 0xa72 <vfprintf+0x130>
 a68:	0c 5f       	subi	r16, 0xFC	; 252
 a6a:	1f 4f       	sbci	r17, 0xFF	; 255
 a6c:	9f e3       	ldi	r25, 0x3F	; 63
 a6e:	99 83       	std	Y+1, r25	; 0x01
 a70:	0d c0       	rjmp	.+26     	; 0xa8c <vfprintf+0x14a>
 a72:	83 36       	cpi	r24, 0x63	; 99
 a74:	31 f0       	breq	.+12     	; 0xa82 <vfprintf+0x140>
 a76:	83 37       	cpi	r24, 0x73	; 115
 a78:	71 f0       	breq	.+28     	; 0xa96 <vfprintf+0x154>
 a7a:	83 35       	cpi	r24, 0x53	; 83
 a7c:	09 f0       	breq	.+2      	; 0xa80 <vfprintf+0x13e>
 a7e:	55 c0       	rjmp	.+170    	; 0xb2a <vfprintf+0x1e8>
 a80:	20 c0       	rjmp	.+64     	; 0xac2 <vfprintf+0x180>
 a82:	f8 01       	movw	r30, r16
 a84:	80 81       	ld	r24, Z
 a86:	89 83       	std	Y+1, r24	; 0x01
 a88:	0e 5f       	subi	r16, 0xFE	; 254
 a8a:	1f 4f       	sbci	r17, 0xFF	; 255
 a8c:	88 24       	eor	r8, r8
 a8e:	83 94       	inc	r8
 a90:	91 2c       	mov	r9, r1
 a92:	53 01       	movw	r10, r6
 a94:	12 c0       	rjmp	.+36     	; 0xaba <vfprintf+0x178>
 a96:	28 01       	movw	r4, r16
 a98:	f2 e0       	ldi	r31, 0x02	; 2
 a9a:	4f 0e       	add	r4, r31
 a9c:	51 1c       	adc	r5, r1
 a9e:	f8 01       	movw	r30, r16
 aa0:	a0 80       	ld	r10, Z
 aa2:	b1 80       	ldd	r11, Z+1	; 0x01
 aa4:	36 fe       	sbrs	r3, 6
 aa6:	03 c0       	rjmp	.+6      	; 0xaae <vfprintf+0x16c>
 aa8:	69 2d       	mov	r22, r9
 aaa:	70 e0       	ldi	r23, 0x00	; 0
 aac:	02 c0       	rjmp	.+4      	; 0xab2 <vfprintf+0x170>
 aae:	6f ef       	ldi	r22, 0xFF	; 255
 ab0:	7f ef       	ldi	r23, 0xFF	; 255
 ab2:	c5 01       	movw	r24, r10
 ab4:	4e d1       	rcall	.+668    	; 0xd52 <strnlen>
 ab6:	4c 01       	movw	r8, r24
 ab8:	82 01       	movw	r16, r4
 aba:	f3 2d       	mov	r31, r3
 abc:	ff 77       	andi	r31, 0x7F	; 127
 abe:	3f 2e       	mov	r3, r31
 ac0:	15 c0       	rjmp	.+42     	; 0xaec <vfprintf+0x1aa>
 ac2:	28 01       	movw	r4, r16
 ac4:	22 e0       	ldi	r18, 0x02	; 2
 ac6:	42 0e       	add	r4, r18
 ac8:	51 1c       	adc	r5, r1
 aca:	f8 01       	movw	r30, r16
 acc:	a0 80       	ld	r10, Z
 ace:	b1 80       	ldd	r11, Z+1	; 0x01
 ad0:	36 fe       	sbrs	r3, 6
 ad2:	03 c0       	rjmp	.+6      	; 0xada <vfprintf+0x198>
 ad4:	69 2d       	mov	r22, r9
 ad6:	70 e0       	ldi	r23, 0x00	; 0
 ad8:	02 c0       	rjmp	.+4      	; 0xade <vfprintf+0x19c>
 ada:	6f ef       	ldi	r22, 0xFF	; 255
 adc:	7f ef       	ldi	r23, 0xFF	; 255
 ade:	c5 01       	movw	r24, r10
 ae0:	2d d1       	rcall	.+602    	; 0xd3c <strnlen_P>
 ae2:	4c 01       	movw	r8, r24
 ae4:	f3 2d       	mov	r31, r3
 ae6:	f0 68       	ori	r31, 0x80	; 128
 ae8:	3f 2e       	mov	r3, r31
 aea:	82 01       	movw	r16, r4
 aec:	33 fc       	sbrc	r3, 3
 aee:	19 c0       	rjmp	.+50     	; 0xb22 <vfprintf+0x1e0>
 af0:	82 2d       	mov	r24, r2
 af2:	90 e0       	ldi	r25, 0x00	; 0
 af4:	88 16       	cp	r8, r24
 af6:	99 06       	cpc	r9, r25
 af8:	a0 f4       	brcc	.+40     	; 0xb22 <vfprintf+0x1e0>
 afa:	b6 01       	movw	r22, r12
 afc:	80 e2       	ldi	r24, 0x20	; 32
 afe:	90 e0       	ldi	r25, 0x00	; 0
 b00:	33 d1       	rcall	.+614    	; 0xd68 <fputc>
 b02:	2a 94       	dec	r2
 b04:	f5 cf       	rjmp	.-22     	; 0xaf0 <vfprintf+0x1ae>
 b06:	f5 01       	movw	r30, r10
 b08:	37 fc       	sbrc	r3, 7
 b0a:	85 91       	lpm	r24, Z+
 b0c:	37 fe       	sbrs	r3, 7
 b0e:	81 91       	ld	r24, Z+
 b10:	5f 01       	movw	r10, r30
 b12:	b6 01       	movw	r22, r12
 b14:	90 e0       	ldi	r25, 0x00	; 0
 b16:	28 d1       	rcall	.+592    	; 0xd68 <fputc>
 b18:	21 10       	cpse	r2, r1
 b1a:	2a 94       	dec	r2
 b1c:	21 e0       	ldi	r18, 0x01	; 1
 b1e:	82 1a       	sub	r8, r18
 b20:	91 08       	sbc	r9, r1
 b22:	81 14       	cp	r8, r1
 b24:	91 04       	cpc	r9, r1
 b26:	79 f7       	brne	.-34     	; 0xb06 <vfprintf+0x1c4>
 b28:	e1 c0       	rjmp	.+450    	; 0xcec <vfprintf+0x3aa>
 b2a:	84 36       	cpi	r24, 0x64	; 100
 b2c:	11 f0       	breq	.+4      	; 0xb32 <vfprintf+0x1f0>
 b2e:	89 36       	cpi	r24, 0x69	; 105
 b30:	39 f5       	brne	.+78     	; 0xb80 <vfprintf+0x23e>
 b32:	f8 01       	movw	r30, r16
 b34:	37 fe       	sbrs	r3, 7
 b36:	07 c0       	rjmp	.+14     	; 0xb46 <vfprintf+0x204>
 b38:	60 81       	ld	r22, Z
 b3a:	71 81       	ldd	r23, Z+1	; 0x01
 b3c:	82 81       	ldd	r24, Z+2	; 0x02
 b3e:	93 81       	ldd	r25, Z+3	; 0x03
 b40:	0c 5f       	subi	r16, 0xFC	; 252
 b42:	1f 4f       	sbci	r17, 0xFF	; 255
 b44:	08 c0       	rjmp	.+16     	; 0xb56 <vfprintf+0x214>
 b46:	60 81       	ld	r22, Z
 b48:	71 81       	ldd	r23, Z+1	; 0x01
 b4a:	07 2e       	mov	r0, r23
 b4c:	00 0c       	add	r0, r0
 b4e:	88 0b       	sbc	r24, r24
 b50:	99 0b       	sbc	r25, r25
 b52:	0e 5f       	subi	r16, 0xFE	; 254
 b54:	1f 4f       	sbci	r17, 0xFF	; 255
 b56:	f3 2d       	mov	r31, r3
 b58:	ff 76       	andi	r31, 0x6F	; 111
 b5a:	3f 2e       	mov	r3, r31
 b5c:	97 ff       	sbrs	r25, 7
 b5e:	09 c0       	rjmp	.+18     	; 0xb72 <vfprintf+0x230>
 b60:	90 95       	com	r25
 b62:	80 95       	com	r24
 b64:	70 95       	com	r23
 b66:	61 95       	neg	r22
 b68:	7f 4f       	sbci	r23, 0xFF	; 255
 b6a:	8f 4f       	sbci	r24, 0xFF	; 255
 b6c:	9f 4f       	sbci	r25, 0xFF	; 255
 b6e:	f0 68       	ori	r31, 0x80	; 128
 b70:	3f 2e       	mov	r3, r31
 b72:	2a e0       	ldi	r18, 0x0A	; 10
 b74:	30 e0       	ldi	r19, 0x00	; 0
 b76:	a3 01       	movw	r20, r6
 b78:	33 d1       	rcall	.+614    	; 0xde0 <__ultoa_invert>
 b7a:	88 2e       	mov	r8, r24
 b7c:	86 18       	sub	r8, r6
 b7e:	44 c0       	rjmp	.+136    	; 0xc08 <vfprintf+0x2c6>
 b80:	85 37       	cpi	r24, 0x75	; 117
 b82:	31 f4       	brne	.+12     	; 0xb90 <vfprintf+0x24e>
 b84:	23 2d       	mov	r18, r3
 b86:	2f 7e       	andi	r18, 0xEF	; 239
 b88:	b2 2e       	mov	r11, r18
 b8a:	2a e0       	ldi	r18, 0x0A	; 10
 b8c:	30 e0       	ldi	r19, 0x00	; 0
 b8e:	25 c0       	rjmp	.+74     	; 0xbda <vfprintf+0x298>
 b90:	93 2d       	mov	r25, r3
 b92:	99 7f       	andi	r25, 0xF9	; 249
 b94:	b9 2e       	mov	r11, r25
 b96:	8f 36       	cpi	r24, 0x6F	; 111
 b98:	c1 f0       	breq	.+48     	; 0xbca <vfprintf+0x288>
 b9a:	18 f4       	brcc	.+6      	; 0xba2 <vfprintf+0x260>
 b9c:	88 35       	cpi	r24, 0x58	; 88
 b9e:	79 f0       	breq	.+30     	; 0xbbe <vfprintf+0x27c>
 ba0:	ae c0       	rjmp	.+348    	; 0xcfe <vfprintf+0x3bc>
 ba2:	80 37       	cpi	r24, 0x70	; 112
 ba4:	19 f0       	breq	.+6      	; 0xbac <vfprintf+0x26a>
 ba6:	88 37       	cpi	r24, 0x78	; 120
 ba8:	21 f0       	breq	.+8      	; 0xbb2 <vfprintf+0x270>
 baa:	a9 c0       	rjmp	.+338    	; 0xcfe <vfprintf+0x3bc>
 bac:	e9 2f       	mov	r30, r25
 bae:	e0 61       	ori	r30, 0x10	; 16
 bb0:	be 2e       	mov	r11, r30
 bb2:	b4 fe       	sbrs	r11, 4
 bb4:	0d c0       	rjmp	.+26     	; 0xbd0 <vfprintf+0x28e>
 bb6:	fb 2d       	mov	r31, r11
 bb8:	f4 60       	ori	r31, 0x04	; 4
 bba:	bf 2e       	mov	r11, r31
 bbc:	09 c0       	rjmp	.+18     	; 0xbd0 <vfprintf+0x28e>
 bbe:	34 fe       	sbrs	r3, 4
 bc0:	0a c0       	rjmp	.+20     	; 0xbd6 <vfprintf+0x294>
 bc2:	29 2f       	mov	r18, r25
 bc4:	26 60       	ori	r18, 0x06	; 6
 bc6:	b2 2e       	mov	r11, r18
 bc8:	06 c0       	rjmp	.+12     	; 0xbd6 <vfprintf+0x294>
 bca:	28 e0       	ldi	r18, 0x08	; 8
 bcc:	30 e0       	ldi	r19, 0x00	; 0
 bce:	05 c0       	rjmp	.+10     	; 0xbda <vfprintf+0x298>
 bd0:	20 e1       	ldi	r18, 0x10	; 16
 bd2:	30 e0       	ldi	r19, 0x00	; 0
 bd4:	02 c0       	rjmp	.+4      	; 0xbda <vfprintf+0x298>
 bd6:	20 e1       	ldi	r18, 0x10	; 16
 bd8:	32 e0       	ldi	r19, 0x02	; 2
 bda:	f8 01       	movw	r30, r16
 bdc:	b7 fe       	sbrs	r11, 7
 bde:	07 c0       	rjmp	.+14     	; 0xbee <vfprintf+0x2ac>
 be0:	60 81       	ld	r22, Z
 be2:	71 81       	ldd	r23, Z+1	; 0x01
 be4:	82 81       	ldd	r24, Z+2	; 0x02
 be6:	93 81       	ldd	r25, Z+3	; 0x03
 be8:	0c 5f       	subi	r16, 0xFC	; 252
 bea:	1f 4f       	sbci	r17, 0xFF	; 255
 bec:	06 c0       	rjmp	.+12     	; 0xbfa <vfprintf+0x2b8>
 bee:	60 81       	ld	r22, Z
 bf0:	71 81       	ldd	r23, Z+1	; 0x01
 bf2:	80 e0       	ldi	r24, 0x00	; 0
 bf4:	90 e0       	ldi	r25, 0x00	; 0
 bf6:	0e 5f       	subi	r16, 0xFE	; 254
 bf8:	1f 4f       	sbci	r17, 0xFF	; 255
 bfa:	a3 01       	movw	r20, r6
 bfc:	f1 d0       	rcall	.+482    	; 0xde0 <__ultoa_invert>
 bfe:	88 2e       	mov	r8, r24
 c00:	86 18       	sub	r8, r6
 c02:	fb 2d       	mov	r31, r11
 c04:	ff 77       	andi	r31, 0x7F	; 127
 c06:	3f 2e       	mov	r3, r31
 c08:	36 fe       	sbrs	r3, 6
 c0a:	0d c0       	rjmp	.+26     	; 0xc26 <vfprintf+0x2e4>
 c0c:	23 2d       	mov	r18, r3
 c0e:	2e 7f       	andi	r18, 0xFE	; 254
 c10:	a2 2e       	mov	r10, r18
 c12:	89 14       	cp	r8, r9
 c14:	58 f4       	brcc	.+22     	; 0xc2c <vfprintf+0x2ea>
 c16:	34 fe       	sbrs	r3, 4
 c18:	0b c0       	rjmp	.+22     	; 0xc30 <vfprintf+0x2ee>
 c1a:	32 fc       	sbrc	r3, 2
 c1c:	09 c0       	rjmp	.+18     	; 0xc30 <vfprintf+0x2ee>
 c1e:	83 2d       	mov	r24, r3
 c20:	8e 7e       	andi	r24, 0xEE	; 238
 c22:	a8 2e       	mov	r10, r24
 c24:	05 c0       	rjmp	.+10     	; 0xc30 <vfprintf+0x2ee>
 c26:	b8 2c       	mov	r11, r8
 c28:	a3 2c       	mov	r10, r3
 c2a:	03 c0       	rjmp	.+6      	; 0xc32 <vfprintf+0x2f0>
 c2c:	b8 2c       	mov	r11, r8
 c2e:	01 c0       	rjmp	.+2      	; 0xc32 <vfprintf+0x2f0>
 c30:	b9 2c       	mov	r11, r9
 c32:	a4 fe       	sbrs	r10, 4
 c34:	0f c0       	rjmp	.+30     	; 0xc54 <vfprintf+0x312>
 c36:	fe 01       	movw	r30, r28
 c38:	e8 0d       	add	r30, r8
 c3a:	f1 1d       	adc	r31, r1
 c3c:	80 81       	ld	r24, Z
 c3e:	80 33       	cpi	r24, 0x30	; 48
 c40:	21 f4       	brne	.+8      	; 0xc4a <vfprintf+0x308>
 c42:	9a 2d       	mov	r25, r10
 c44:	99 7e       	andi	r25, 0xE9	; 233
 c46:	a9 2e       	mov	r10, r25
 c48:	09 c0       	rjmp	.+18     	; 0xc5c <vfprintf+0x31a>
 c4a:	a2 fe       	sbrs	r10, 2
 c4c:	06 c0       	rjmp	.+12     	; 0xc5a <vfprintf+0x318>
 c4e:	b3 94       	inc	r11
 c50:	b3 94       	inc	r11
 c52:	04 c0       	rjmp	.+8      	; 0xc5c <vfprintf+0x31a>
 c54:	8a 2d       	mov	r24, r10
 c56:	86 78       	andi	r24, 0x86	; 134
 c58:	09 f0       	breq	.+2      	; 0xc5c <vfprintf+0x31a>
 c5a:	b3 94       	inc	r11
 c5c:	a3 fc       	sbrc	r10, 3
 c5e:	10 c0       	rjmp	.+32     	; 0xc80 <vfprintf+0x33e>
 c60:	a0 fe       	sbrs	r10, 0
 c62:	06 c0       	rjmp	.+12     	; 0xc70 <vfprintf+0x32e>
 c64:	b2 14       	cp	r11, r2
 c66:	80 f4       	brcc	.+32     	; 0xc88 <vfprintf+0x346>
 c68:	28 0c       	add	r2, r8
 c6a:	92 2c       	mov	r9, r2
 c6c:	9b 18       	sub	r9, r11
 c6e:	0d c0       	rjmp	.+26     	; 0xc8a <vfprintf+0x348>
 c70:	b2 14       	cp	r11, r2
 c72:	58 f4       	brcc	.+22     	; 0xc8a <vfprintf+0x348>
 c74:	b6 01       	movw	r22, r12
 c76:	80 e2       	ldi	r24, 0x20	; 32
 c78:	90 e0       	ldi	r25, 0x00	; 0
 c7a:	76 d0       	rcall	.+236    	; 0xd68 <fputc>
 c7c:	b3 94       	inc	r11
 c7e:	f8 cf       	rjmp	.-16     	; 0xc70 <vfprintf+0x32e>
 c80:	b2 14       	cp	r11, r2
 c82:	18 f4       	brcc	.+6      	; 0xc8a <vfprintf+0x348>
 c84:	2b 18       	sub	r2, r11
 c86:	02 c0       	rjmp	.+4      	; 0xc8c <vfprintf+0x34a>
 c88:	98 2c       	mov	r9, r8
 c8a:	21 2c       	mov	r2, r1
 c8c:	a4 fe       	sbrs	r10, 4
 c8e:	0f c0       	rjmp	.+30     	; 0xcae <vfprintf+0x36c>
 c90:	b6 01       	movw	r22, r12
 c92:	80 e3       	ldi	r24, 0x30	; 48
 c94:	90 e0       	ldi	r25, 0x00	; 0
 c96:	68 d0       	rcall	.+208    	; 0xd68 <fputc>
 c98:	a2 fe       	sbrs	r10, 2
 c9a:	16 c0       	rjmp	.+44     	; 0xcc8 <vfprintf+0x386>
 c9c:	a1 fc       	sbrc	r10, 1
 c9e:	03 c0       	rjmp	.+6      	; 0xca6 <vfprintf+0x364>
 ca0:	88 e7       	ldi	r24, 0x78	; 120
 ca2:	90 e0       	ldi	r25, 0x00	; 0
 ca4:	02 c0       	rjmp	.+4      	; 0xcaa <vfprintf+0x368>
 ca6:	88 e5       	ldi	r24, 0x58	; 88
 ca8:	90 e0       	ldi	r25, 0x00	; 0
 caa:	b6 01       	movw	r22, r12
 cac:	0c c0       	rjmp	.+24     	; 0xcc6 <vfprintf+0x384>
 cae:	8a 2d       	mov	r24, r10
 cb0:	86 78       	andi	r24, 0x86	; 134
 cb2:	51 f0       	breq	.+20     	; 0xcc8 <vfprintf+0x386>
 cb4:	a1 fe       	sbrs	r10, 1
 cb6:	02 c0       	rjmp	.+4      	; 0xcbc <vfprintf+0x37a>
 cb8:	8b e2       	ldi	r24, 0x2B	; 43
 cba:	01 c0       	rjmp	.+2      	; 0xcbe <vfprintf+0x37c>
 cbc:	80 e2       	ldi	r24, 0x20	; 32
 cbe:	a7 fc       	sbrc	r10, 7
 cc0:	8d e2       	ldi	r24, 0x2D	; 45
 cc2:	b6 01       	movw	r22, r12
 cc4:	90 e0       	ldi	r25, 0x00	; 0
 cc6:	50 d0       	rcall	.+160    	; 0xd68 <fputc>
 cc8:	89 14       	cp	r8, r9
 cca:	30 f4       	brcc	.+12     	; 0xcd8 <vfprintf+0x396>
 ccc:	b6 01       	movw	r22, r12
 cce:	80 e3       	ldi	r24, 0x30	; 48
 cd0:	90 e0       	ldi	r25, 0x00	; 0
 cd2:	4a d0       	rcall	.+148    	; 0xd68 <fputc>
 cd4:	9a 94       	dec	r9
 cd6:	f8 cf       	rjmp	.-16     	; 0xcc8 <vfprintf+0x386>
 cd8:	8a 94       	dec	r8
 cda:	f3 01       	movw	r30, r6
 cdc:	e8 0d       	add	r30, r8
 cde:	f1 1d       	adc	r31, r1
 ce0:	80 81       	ld	r24, Z
 ce2:	b6 01       	movw	r22, r12
 ce4:	90 e0       	ldi	r25, 0x00	; 0
 ce6:	40 d0       	rcall	.+128    	; 0xd68 <fputc>
 ce8:	81 10       	cpse	r8, r1
 cea:	f6 cf       	rjmp	.-20     	; 0xcd8 <vfprintf+0x396>
 cec:	22 20       	and	r2, r2
 cee:	09 f4       	brne	.+2      	; 0xcf2 <vfprintf+0x3b0>
 cf0:	4e ce       	rjmp	.-868    	; 0x98e <vfprintf+0x4c>
 cf2:	b6 01       	movw	r22, r12
 cf4:	80 e2       	ldi	r24, 0x20	; 32
 cf6:	90 e0       	ldi	r25, 0x00	; 0
 cf8:	37 d0       	rcall	.+110    	; 0xd68 <fputc>
 cfa:	2a 94       	dec	r2
 cfc:	f7 cf       	rjmp	.-18     	; 0xcec <vfprintf+0x3aa>
 cfe:	f6 01       	movw	r30, r12
 d00:	86 81       	ldd	r24, Z+6	; 0x06
 d02:	97 81       	ldd	r25, Z+7	; 0x07
 d04:	02 c0       	rjmp	.+4      	; 0xd0a <vfprintf+0x3c8>
 d06:	8f ef       	ldi	r24, 0xFF	; 255
 d08:	9f ef       	ldi	r25, 0xFF	; 255
 d0a:	2b 96       	adiw	r28, 0x0b	; 11
 d0c:	0f b6       	in	r0, 0x3f	; 63
 d0e:	f8 94       	cli
 d10:	de bf       	out	0x3e, r29	; 62
 d12:	0f be       	out	0x3f, r0	; 63
 d14:	cd bf       	out	0x3d, r28	; 61
 d16:	df 91       	pop	r29
 d18:	cf 91       	pop	r28
 d1a:	1f 91       	pop	r17
 d1c:	0f 91       	pop	r16
 d1e:	ff 90       	pop	r15
 d20:	ef 90       	pop	r14
 d22:	df 90       	pop	r13
 d24:	cf 90       	pop	r12
 d26:	bf 90       	pop	r11
 d28:	af 90       	pop	r10
 d2a:	9f 90       	pop	r9
 d2c:	8f 90       	pop	r8
 d2e:	7f 90       	pop	r7
 d30:	6f 90       	pop	r6
 d32:	5f 90       	pop	r5
 d34:	4f 90       	pop	r4
 d36:	3f 90       	pop	r3
 d38:	2f 90       	pop	r2
 d3a:	08 95       	ret

00000d3c <strnlen_P>:
 d3c:	fc 01       	movw	r30, r24
 d3e:	05 90       	lpm	r0, Z+
 d40:	61 50       	subi	r22, 0x01	; 1
 d42:	70 40       	sbci	r23, 0x00	; 0
 d44:	01 10       	cpse	r0, r1
 d46:	d8 f7       	brcc	.-10     	; 0xd3e <strnlen_P+0x2>
 d48:	80 95       	com	r24
 d4a:	90 95       	com	r25
 d4c:	8e 0f       	add	r24, r30
 d4e:	9f 1f       	adc	r25, r31
 d50:	08 95       	ret

00000d52 <strnlen>:
 d52:	fc 01       	movw	r30, r24
 d54:	61 50       	subi	r22, 0x01	; 1
 d56:	70 40       	sbci	r23, 0x00	; 0
 d58:	01 90       	ld	r0, Z+
 d5a:	01 10       	cpse	r0, r1
 d5c:	d8 f7       	brcc	.-10     	; 0xd54 <strnlen+0x2>
 d5e:	80 95       	com	r24
 d60:	90 95       	com	r25
 d62:	8e 0f       	add	r24, r30
 d64:	9f 1f       	adc	r25, r31
 d66:	08 95       	ret

00000d68 <fputc>:
 d68:	0f 93       	push	r16
 d6a:	1f 93       	push	r17
 d6c:	cf 93       	push	r28
 d6e:	df 93       	push	r29
 d70:	fb 01       	movw	r30, r22
 d72:	23 81       	ldd	r18, Z+3	; 0x03
 d74:	21 fd       	sbrc	r18, 1
 d76:	03 c0       	rjmp	.+6      	; 0xd7e <fputc+0x16>
 d78:	8f ef       	ldi	r24, 0xFF	; 255
 d7a:	9f ef       	ldi	r25, 0xFF	; 255
 d7c:	2c c0       	rjmp	.+88     	; 0xdd6 <fputc+0x6e>
 d7e:	22 ff       	sbrs	r18, 2
 d80:	16 c0       	rjmp	.+44     	; 0xdae <fputc+0x46>
 d82:	46 81       	ldd	r20, Z+6	; 0x06
 d84:	57 81       	ldd	r21, Z+7	; 0x07
 d86:	24 81       	ldd	r18, Z+4	; 0x04
 d88:	35 81       	ldd	r19, Z+5	; 0x05
 d8a:	42 17       	cp	r20, r18
 d8c:	53 07       	cpc	r21, r19
 d8e:	44 f4       	brge	.+16     	; 0xda0 <fputc+0x38>
 d90:	a0 81       	ld	r26, Z
 d92:	b1 81       	ldd	r27, Z+1	; 0x01
 d94:	9d 01       	movw	r18, r26
 d96:	2f 5f       	subi	r18, 0xFF	; 255
 d98:	3f 4f       	sbci	r19, 0xFF	; 255
 d9a:	31 83       	std	Z+1, r19	; 0x01
 d9c:	20 83       	st	Z, r18
 d9e:	8c 93       	st	X, r24
 da0:	26 81       	ldd	r18, Z+6	; 0x06
 da2:	37 81       	ldd	r19, Z+7	; 0x07
 da4:	2f 5f       	subi	r18, 0xFF	; 255
 da6:	3f 4f       	sbci	r19, 0xFF	; 255
 da8:	37 83       	std	Z+7, r19	; 0x07
 daa:	26 83       	std	Z+6, r18	; 0x06
 dac:	14 c0       	rjmp	.+40     	; 0xdd6 <fputc+0x6e>
 dae:	8b 01       	movw	r16, r22
 db0:	ec 01       	movw	r28, r24
 db2:	fb 01       	movw	r30, r22
 db4:	00 84       	ldd	r0, Z+8	; 0x08
 db6:	f1 85       	ldd	r31, Z+9	; 0x09
 db8:	e0 2d       	mov	r30, r0
 dba:	09 95       	icall
 dbc:	89 2b       	or	r24, r25
 dbe:	e1 f6       	brne	.-72     	; 0xd78 <fputc+0x10>
 dc0:	d8 01       	movw	r26, r16
 dc2:	16 96       	adiw	r26, 0x06	; 6
 dc4:	8d 91       	ld	r24, X+
 dc6:	9c 91       	ld	r25, X
 dc8:	17 97       	sbiw	r26, 0x07	; 7
 dca:	01 96       	adiw	r24, 0x01	; 1
 dcc:	17 96       	adiw	r26, 0x07	; 7
 dce:	9c 93       	st	X, r25
 dd0:	8e 93       	st	-X, r24
 dd2:	16 97       	sbiw	r26, 0x06	; 6
 dd4:	ce 01       	movw	r24, r28
 dd6:	df 91       	pop	r29
 dd8:	cf 91       	pop	r28
 dda:	1f 91       	pop	r17
 ddc:	0f 91       	pop	r16
 dde:	08 95       	ret

00000de0 <__ultoa_invert>:
 de0:	fa 01       	movw	r30, r20
 de2:	aa 27       	eor	r26, r26
 de4:	28 30       	cpi	r18, 0x08	; 8
 de6:	51 f1       	breq	.+84     	; 0xe3c <__ultoa_invert+0x5c>
 de8:	20 31       	cpi	r18, 0x10	; 16
 dea:	81 f1       	breq	.+96     	; 0xe4c <__ultoa_invert+0x6c>
 dec:	e8 94       	clt
 dee:	6f 93       	push	r22
 df0:	6e 7f       	andi	r22, 0xFE	; 254
 df2:	6e 5f       	subi	r22, 0xFE	; 254
 df4:	7f 4f       	sbci	r23, 0xFF	; 255
 df6:	8f 4f       	sbci	r24, 0xFF	; 255
 df8:	9f 4f       	sbci	r25, 0xFF	; 255
 dfa:	af 4f       	sbci	r26, 0xFF	; 255
 dfc:	b1 e0       	ldi	r27, 0x01	; 1
 dfe:	3e d0       	rcall	.+124    	; 0xe7c <__ultoa_invert+0x9c>
 e00:	b4 e0       	ldi	r27, 0x04	; 4
 e02:	3c d0       	rcall	.+120    	; 0xe7c <__ultoa_invert+0x9c>
 e04:	67 0f       	add	r22, r23
 e06:	78 1f       	adc	r23, r24
 e08:	89 1f       	adc	r24, r25
 e0a:	9a 1f       	adc	r25, r26
 e0c:	a1 1d       	adc	r26, r1
 e0e:	68 0f       	add	r22, r24
 e10:	79 1f       	adc	r23, r25
 e12:	8a 1f       	adc	r24, r26
 e14:	91 1d       	adc	r25, r1
 e16:	a1 1d       	adc	r26, r1
 e18:	6a 0f       	add	r22, r26
 e1a:	71 1d       	adc	r23, r1
 e1c:	81 1d       	adc	r24, r1
 e1e:	91 1d       	adc	r25, r1
 e20:	a1 1d       	adc	r26, r1
 e22:	20 d0       	rcall	.+64     	; 0xe64 <__ultoa_invert+0x84>
 e24:	09 f4       	brne	.+2      	; 0xe28 <__ultoa_invert+0x48>
 e26:	68 94       	set
 e28:	3f 91       	pop	r19
 e2a:	2a e0       	ldi	r18, 0x0A	; 10
 e2c:	26 9f       	mul	r18, r22
 e2e:	11 24       	eor	r1, r1
 e30:	30 19       	sub	r19, r0
 e32:	30 5d       	subi	r19, 0xD0	; 208
 e34:	31 93       	st	Z+, r19
 e36:	de f6       	brtc	.-74     	; 0xdee <__ultoa_invert+0xe>
 e38:	cf 01       	movw	r24, r30
 e3a:	08 95       	ret
 e3c:	46 2f       	mov	r20, r22
 e3e:	47 70       	andi	r20, 0x07	; 7
 e40:	40 5d       	subi	r20, 0xD0	; 208
 e42:	41 93       	st	Z+, r20
 e44:	b3 e0       	ldi	r27, 0x03	; 3
 e46:	0f d0       	rcall	.+30     	; 0xe66 <__ultoa_invert+0x86>
 e48:	c9 f7       	brne	.-14     	; 0xe3c <__ultoa_invert+0x5c>
 e4a:	f6 cf       	rjmp	.-20     	; 0xe38 <__ultoa_invert+0x58>
 e4c:	46 2f       	mov	r20, r22
 e4e:	4f 70       	andi	r20, 0x0F	; 15
 e50:	40 5d       	subi	r20, 0xD0	; 208
 e52:	4a 33       	cpi	r20, 0x3A	; 58
 e54:	18 f0       	brcs	.+6      	; 0xe5c <__ultoa_invert+0x7c>
 e56:	49 5d       	subi	r20, 0xD9	; 217
 e58:	31 fd       	sbrc	r19, 1
 e5a:	40 52       	subi	r20, 0x20	; 32
 e5c:	41 93       	st	Z+, r20
 e5e:	02 d0       	rcall	.+4      	; 0xe64 <__ultoa_invert+0x84>
 e60:	a9 f7       	brne	.-22     	; 0xe4c <__ultoa_invert+0x6c>
 e62:	ea cf       	rjmp	.-44     	; 0xe38 <__ultoa_invert+0x58>
 e64:	b4 e0       	ldi	r27, 0x04	; 4
 e66:	a6 95       	lsr	r26
 e68:	97 95       	ror	r25
 e6a:	87 95       	ror	r24
 e6c:	77 95       	ror	r23
 e6e:	67 95       	ror	r22
 e70:	ba 95       	dec	r27
 e72:	c9 f7       	brne	.-14     	; 0xe66 <__ultoa_invert+0x86>
 e74:	00 97       	sbiw	r24, 0x00	; 0
 e76:	61 05       	cpc	r22, r1
 e78:	71 05       	cpc	r23, r1
 e7a:	08 95       	ret
 e7c:	9b 01       	movw	r18, r22
 e7e:	ac 01       	movw	r20, r24
 e80:	0a 2e       	mov	r0, r26
 e82:	06 94       	lsr	r0
 e84:	57 95       	ror	r21
 e86:	47 95       	ror	r20
 e88:	37 95       	ror	r19
 e8a:	27 95       	ror	r18
 e8c:	ba 95       	dec	r27
 e8e:	c9 f7       	brne	.-14     	; 0xe82 <__ultoa_invert+0xa2>
 e90:	62 0f       	add	r22, r18
 e92:	73 1f       	adc	r23, r19
 e94:	84 1f       	adc	r24, r20
 e96:	95 1f       	adc	r25, r21
 e98:	a0 1d       	adc	r26, r0
 e9a:	08 95       	ret

00000e9c <_exit>:
 e9c:	f8 94       	cli

00000e9e <__stop_program>:
 e9e:	ff cf       	rjmp	.-2      	; 0xe9e <__stop_program>
