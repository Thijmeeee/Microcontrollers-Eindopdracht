
Eindopdracht.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  00000a58  00000aec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a58  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080012a  0080012a  00000b16  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b16  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b74  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000bb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e84  00000000  00000000  00000c50  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000958  00000000  00000000  00001ad4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000659  00000000  00000000  0000242c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b4  00000000  00000000  00002a88  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000561  00000000  00000000  00002c3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000449  00000000  00000000  0000319d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  000035e6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	d3 c0       	rjmp	.+422    	; 0x1ac <__vector_1>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4b c0       	rjmp	.+150    	; 0xc8 <__vector_12>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	76 c0       	rjmp	.+236    	; 0x162 <__vector_29>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 e5       	ldi	r30, 0x58	; 88
  a0:	fa e0       	ldi	r31, 0x0A	; 10
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 32       	cpi	r26, 0x2A	; 42
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa e2       	ldi	r26, 0x2A	; 42
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 33       	cpi	r26, 0x30	; 48
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	69 d1       	rcall	.+722    	; 0x396 <main>
  c4:	c7 c4       	rjmp	.+2446   	; 0xa54 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <__vector_12>:

volatile int distance = 0;
int overflow = 0;
volatile uint16_t delay_count = 35000;

ISR(TIMER1_COMPA_vect) {
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	0b b6       	in	r0, 0x3b	; 59
  d4:	0f 92       	push	r0
  d6:	2f 93       	push	r18
  d8:	8f 93       	push	r24
  da:	9f 93       	push	r25
  dc:	ef 93       	push	r30
  de:	ff 93       	push	r31
	if (delay_count < MIN_BUZZER_THRESHOLD)
  e0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  e4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  e8:	88 35       	cpi	r24, 0x58	; 88
  ea:	9b 41       	sbci	r25, 0x1B	; 27
  ec:	50 f4       	brcc	.+20     	; 0x102 <__vector_12+0x3a>
	{
		PORTF = BIT(1);
  ee:	82 e0       	ldi	r24, 0x02	; 2
  f0:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
		delay_count = MIN_BUZZER_THRESHOLD;
  f4:	88 e5       	ldi	r24, 0x58	; 88
  f6:	9b e1       	ldi	r25, 0x1B	; 27
  f8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  fc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 100:	16 c0       	rjmp	.+44     	; 0x12e <__vector_12+0x66>
		} else if (delay_count > MAX_BUZZER_THRESHOLD){
 102:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 106:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 10a:	81 33       	cpi	r24, 0x31	; 49
 10c:	95 47       	sbci	r25, 0x75	; 117
 10e:	48 f0       	brcs	.+18     	; 0x122 <__vector_12+0x5a>
		delay_count = MAX_BUZZER_THRESHOLD;
 110:	80 e3       	ldi	r24, 0x30	; 48
 112:	95 e7       	ldi	r25, 0x75	; 117
 114:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 118:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		PORTF = 0;
 11c:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
 120:	06 c0       	rjmp	.+12     	; 0x12e <__vector_12+0x66>
		} else {
		PORTF ^= BIT(1);
 122:	e2 e6       	ldi	r30, 0x62	; 98
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	90 81       	ld	r25, Z
 128:	82 e0       	ldi	r24, 0x02	; 2
 12a:	89 27       	eor	r24, r25
 12c:	80 83       	st	Z, r24
	}
	delay_count = distance;
 12e:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <distance>
 132:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <distance+0x1>
 136:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 13a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	OCR1A = delay_count;		
 13e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 142:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 146:	9b bd       	out	0x2b, r25	; 43
 148:	8a bd       	out	0x2a, r24	; 42
}
 14a:	ff 91       	pop	r31
 14c:	ef 91       	pop	r30
 14e:	9f 91       	pop	r25
 150:	8f 91       	pop	r24
 152:	2f 91       	pop	r18
 154:	0f 90       	pop	r0
 156:	0b be       	out	0x3b, r0	; 59
 158:	0f 90       	pop	r0
 15a:	0f be       	out	0x3f, r0	; 63
 15c:	0f 90       	pop	r0
 15e:	1f 90       	pop	r1
 160:	18 95       	reti

00000162 <__vector_29>:

ISR(TIMER3_OVF_vect) {
 162:	1f 92       	push	r1
 164:	0f 92       	push	r0
 166:	0f b6       	in	r0, 0x3f	; 63
 168:	0f 92       	push	r0
 16a:	11 24       	eor	r1, r1
 16c:	0b b6       	in	r0, 0x3b	; 59
 16e:	0f 92       	push	r0
 170:	8f 93       	push	r24
 172:	9f 93       	push	r25
 174:	ef 93       	push	r30
 176:	ff 93       	push	r31
	// Reset Timer 3
	overflow = 1;
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <overflow+0x1>
 180:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <overflow>
	TCCR3B |= (1 << CS30); // Start Timer 3 again
 184:	ea e8       	ldi	r30, 0x8A	; 138
 186:	f0 e0       	ldi	r31, 0x00	; 0
 188:	80 81       	ld	r24, Z
 18a:	81 60       	ori	r24, 0x01	; 1
 18c:	80 83       	st	Z, r24
	TCNT3 = 0;
 18e:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 192:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
}
 196:	ff 91       	pop	r31
 198:	ef 91       	pop	r30
 19a:	9f 91       	pop	r25
 19c:	8f 91       	pop	r24
 19e:	0f 90       	pop	r0
 1a0:	0b be       	out	0x3b, r0	; 59
 1a2:	0f 90       	pop	r0
 1a4:	0f be       	out	0x3f, r0	; 63
 1a6:	0f 90       	pop	r0
 1a8:	1f 90       	pop	r1
 1aa:	18 95       	reti

000001ac <__vector_1>:



ISR (INT0_vect){
 1ac:	1f 92       	push	r1
 1ae:	0f 92       	push	r0
 1b0:	0f b6       	in	r0, 0x3f	; 63
 1b2:	0f 92       	push	r0
 1b4:	11 24       	eor	r1, r1
 1b6:	2f 93       	push	r18
 1b8:	8f 93       	push	r24
 1ba:	9f 93       	push	r25
	if (overflow){
 1bc:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <overflow>
 1c0:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <overflow+0x1>
 1c4:	89 2b       	or	r24, r25
 1c6:	39 f0       	breq	.+14     	; 0x1d6 <__vector_1+0x2a>
		distance = -1;
 1c8:	8f ef       	ldi	r24, 0xFF	; 255
 1ca:	9f ef       	ldi	r25, 0xFF	; 255
 1cc:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <distance+0x1>
 1d0:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <distance>
 1d4:	13 c0       	rjmp	.+38     	; 0x1fc <__vector_1+0x50>
		//overflow = 0;
	} else {
		// Lees de waarde van Timer 3
		int timerValue = TCNT3;
 1d6:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 1da:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
		if (timerValue > MAX_BUZZER_THRESHOLD)
 1de:	81 33       	cpi	r24, 0x31	; 49
 1e0:	25 e7       	ldi	r18, 0x75	; 117
 1e2:	92 07       	cpc	r25, r18
 1e4:	3c f0       	brlt	.+14     	; 0x1f4 <__vector_1+0x48>
		{
			distance = -1;
 1e6:	8f ef       	ldi	r24, 0xFF	; 255
 1e8:	9f ef       	ldi	r25, 0xFF	; 255
 1ea:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <distance+0x1>
 1ee:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <distance>
 1f2:	04 c0       	rjmp	.+8      	; 0x1fc <__vector_1+0x50>
		} else {
			distance = timerValue;
 1f4:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <distance+0x1>
 1f8:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <distance>
		}
	}
}
 1fc:	9f 91       	pop	r25
 1fe:	8f 91       	pop	r24
 200:	2f 91       	pop	r18
 202:	0f 90       	pop	r0
 204:	0f be       	out	0x3f, r0	; 63
 206:	0f 90       	pop	r0
 208:	1f 90       	pop	r1
 20a:	18 95       	reti

0000020c <wait>:

void wait(int ms) {
	for (int i = 0; i < ms; i++) {
 20c:	20 e0       	ldi	r18, 0x00	; 0
 20e:	30 e0       	ldi	r19, 0x00	; 0
 210:	08 c0       	rjmp	.+16     	; 0x222 <wait+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 212:	ef ec       	ldi	r30, 0xCF	; 207
 214:	f7 e0       	ldi	r31, 0x07	; 7
 216:	31 97       	sbiw	r30, 0x01	; 1
 218:	f1 f7       	brne	.-4      	; 0x216 <wait+0xa>
 21a:	00 c0       	rjmp	.+0      	; 0x21c <wait+0x10>
 21c:	00 00       	nop
 21e:	2f 5f       	subi	r18, 0xFF	; 255
 220:	3f 4f       	sbci	r19, 0xFF	; 255
 222:	28 17       	cp	r18, r24
 224:	39 07       	cpc	r19, r25
 226:	ac f3       	brlt	.-22     	; 0x212 <wait+0x6>
		_delay_ms(1);
	}
}
 228:	08 95       	ret

0000022a <wait_micro>:

void wait_micro(int us) {
	for (int i = 0; i < us; i++) {
 22a:	20 e0       	ldi	r18, 0x00	; 0
 22c:	30 e0       	ldi	r19, 0x00	; 0
 22e:	06 c0       	rjmp	.+12     	; 0x23c <wait_micro+0x12>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 230:	42 e0       	ldi	r20, 0x02	; 2
 232:	4a 95       	dec	r20
 234:	f1 f7       	brne	.-4      	; 0x232 <wait_micro+0x8>
 236:	00 c0       	rjmp	.+0      	; 0x238 <wait_micro+0xe>
 238:	2f 5f       	subi	r18, 0xFF	; 255
 23a:	3f 4f       	sbci	r19, 0xFF	; 255
 23c:	28 17       	cp	r18, r24
 23e:	39 07       	cpc	r19, r25
 240:	bc f3       	brlt	.-18     	; 0x230 <wait_micro+0x6>
		_delay_us(1);
	}
}
 242:	08 95       	ret

00000244 <lcd_strobe_lcd_e>:
	lcd_strobe_lcd_e();
	
}

void lcd_strobe_lcd_e(void) {
	PORTC |= (1<<LCD_E);
 244:	85 b3       	in	r24, 0x15	; 21
 246:	88 60       	ori	r24, 0x08	; 8
 248:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 24a:	8f ec       	ldi	r24, 0xCF	; 207
 24c:	97 e0       	ldi	r25, 0x07	; 7
 24e:	01 97       	sbiw	r24, 0x01	; 1
 250:	f1 f7       	brne	.-4      	; 0x24e <lcd_strobe_lcd_e+0xa>
 252:	00 c0       	rjmp	.+0      	; 0x254 <lcd_strobe_lcd_e+0x10>
 254:	00 00       	nop
	_delay_ms(1);
	PORTC &= ~(1<<LCD_E);
 256:	85 b3       	in	r24, 0x15	; 21
 258:	87 7f       	andi	r24, 0xF7	; 247
 25a:	85 bb       	out	0x15, r24	; 21
 25c:	8f ec       	ldi	r24, 0xCF	; 207
 25e:	97 e0       	ldi	r25, 0x07	; 7
 260:	01 97       	sbiw	r24, 0x01	; 1
 262:	f1 f7       	brne	.-4      	; 0x260 <lcd_strobe_lcd_e+0x1c>
 264:	00 c0       	rjmp	.+0      	; 0x266 <lcd_strobe_lcd_e+0x22>
 266:	00 00       	nop
 268:	08 95       	ret

0000026a <lcd_write_command>:
		_delay_us(1);
	}
}

void lcd_write_command(unsigned char byte)
{
 26a:	cf 93       	push	r28
 26c:	c8 2f       	mov	r28, r24
	PORTC = byte;
 26e:	85 bb       	out	0x15, r24	; 21
	PORTC &= ~(1<<LCD_RS);
 270:	85 b3       	in	r24, 0x15	; 21
 272:	8b 7f       	andi	r24, 0xFB	; 251
 274:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 276:	e6 df       	rcall	.-52     	; 0x244 <lcd_strobe_lcd_e>

	PORTC = (byte<<4);
 278:	c2 95       	swap	r28
 27a:	c0 7f       	andi	r28, 0xF0	; 240
 27c:	c5 bb       	out	0x15, r28	; 21
	PORTC &= ~(1<<LCD_RS);
 27e:	85 b3       	in	r24, 0x15	; 21
 280:	8b 7f       	andi	r24, 0xFB	; 251
	lcd_strobe_lcd_e();
 282:	85 bb       	out	0x15, r24	; 21
 284:	df df       	rcall	.-66     	; 0x244 <lcd_strobe_lcd_e>
}
 286:	cf 91       	pop	r28
 288:	08 95       	ret

0000028a <lcd_writeChar>:

void lcd_writeChar(unsigned char data) {
 28a:	cf 93       	push	r28
 28c:	c8 2f       	mov	r28, r24
	PORTC = data & 0xF0;
 28e:	80 7f       	andi	r24, 0xF0	; 240
 290:	85 bb       	out	0x15, r24	; 21
	PORTC |= (1<<LCD_RS);
 292:	85 b3       	in	r24, 0x15	; 21
 294:	84 60       	ori	r24, 0x04	; 4
 296:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 298:	d5 df       	rcall	.-86     	; 0x244 <lcd_strobe_lcd_e>
	
	PORTC = (data & 0x0F) <<4;
 29a:	20 e1       	ldi	r18, 0x10	; 16
 29c:	c2 9f       	mul	r28, r18
 29e:	c0 01       	movw	r24, r0
 2a0:	11 24       	eor	r1, r1
 2a2:	85 bb       	out	0x15, r24	; 21
	PORTC |= (1<<LCD_RS);
 2a4:	85 b3       	in	r24, 0x15	; 21
 2a6:	84 60       	ori	r24, 0x04	; 4
	lcd_strobe_lcd_e();
 2a8:	85 bb       	out	0x15, r24	; 21
 2aa:	cc df       	rcall	.-104    	; 0x244 <lcd_strobe_lcd_e>
	
}
 2ac:	cf 91       	pop	r28
 2ae:	08 95       	ret

000002b0 <init_4bits_mode>:
	PORTC &= ~(1<<LCD_E);
	_delay_ms(1);
}

void init_4bits_mode(void) {
	DDRC = 0xFF;
 2b0:	8f ef       	ldi	r24, 0xFF	; 255
 2b2:	84 bb       	out	0x14, r24	; 20
	PORTC = 0x00;
 2b4:	15 ba       	out	0x15, r1	; 21

	lcd_write_command( 0x28);
 2b6:	88 e2       	ldi	r24, 0x28	; 40
 2b8:	d8 df       	rcall	.-80     	; 0x26a <lcd_write_command>
	lcd_strobe_lcd_e();
 2ba:	c4 df       	rcall	.-120    	; 0x244 <lcd_strobe_lcd_e>

	lcd_write_command( 0x28);
 2bc:	88 e2       	ldi	r24, 0x28	; 40
 2be:	d5 df       	rcall	.-86     	; 0x26a <lcd_write_command>
	lcd_strobe_lcd_e();
 2c0:	c1 df       	rcall	.-126    	; 0x244 <lcd_strobe_lcd_e>
	
	lcd_write_command( 0x28);
 2c2:	88 e2       	ldi	r24, 0x28	; 40
	lcd_strobe_lcd_e();
 2c4:	d2 df       	rcall	.-92     	; 0x26a <lcd_write_command>
	
	lcd_write_command( 0x80);
 2c6:	be df       	rcall	.-132    	; 0x244 <lcd_strobe_lcd_e>
 2c8:	80 e8       	ldi	r24, 0x80	; 128
	lcd_strobe_lcd_e();
 2ca:	cf df       	rcall	.-98     	; 0x26a <lcd_write_command>

	lcd_write_command( 0x00);
 2cc:	bb df       	rcall	.-138    	; 0x244 <lcd_strobe_lcd_e>
 2ce:	80 e0       	ldi	r24, 0x00	; 0
	lcd_strobe_lcd_e();
 2d0:	cc df       	rcall	.-104    	; 0x26a <lcd_write_command>
	lcd_write_command( 0xF0);
 2d2:	b8 df       	rcall	.-144    	; 0x244 <lcd_strobe_lcd_e>
 2d4:	80 ef       	ldi	r24, 0xF0	; 240
 2d6:	c9 df       	rcall	.-110    	; 0x26a <lcd_write_command>
	lcd_strobe_lcd_e();
 2d8:	b5 df       	rcall	.-150    	; 0x244 <lcd_strobe_lcd_e>
 2da:	80 e0       	ldi	r24, 0x00	; 0

	lcd_write_command( 0x00);
 2dc:	c6 df       	rcall	.-116    	; 0x26a <lcd_write_command>
 2de:	b2 df       	rcall	.-156    	; 0x244 <lcd_strobe_lcd_e>
 2e0:	80 e6       	ldi	r24, 0x60	; 96
	lcd_strobe_lcd_e();
 2e2:	c3 df       	rcall	.-122    	; 0x26a <lcd_write_command>
 2e4:	af cf       	rjmp	.-162    	; 0x244 <lcd_strobe_lcd_e>
	lcd_write_command( 0x60);
 2e6:	08 95       	ret

000002e8 <clear_lcd>:
 2e8:	81 e0       	ldi	r24, 0x01	; 1
 2ea:	bf cf       	rjmp	.-130    	; 0x26a <lcd_write_command>
	lcd_strobe_lcd_e();
 2ec:	08 95       	ret

000002ee <init_buzzer>:
 2ee:	e1 e6       	ldi	r30, 0x61	; 97
 2f0:	f0 e0       	ldi	r31, 0x00	; 0
{
	lcd_write_command(0x01);
}

void init_buzzer(){
	DDRF |= BIT(1); // Set the buzzer pin
 2f2:	80 81       	ld	r24, Z
 2f4:	82 60       	ori	r24, 0x02	; 2
 2f6:	80 83       	st	Z, r24
	
	TCCR1B |= (1 << WGM12); // Configure timer 1 for CTC mode
 2f8:	8e b5       	in	r24, 0x2e	; 46
 2fa:	88 60       	ori	r24, 0x08	; 8
 2fc:	8e bd       	out	0x2e, r24	; 46
	TIMSK |= (1 << OCIE1A); // Enable CTC interrupt
 2fe:	87 b7       	in	r24, 0x37	; 55
 300:	80 61       	ori	r24, 0x10	; 16
 302:	87 bf       	out	0x37, r24	; 55
	OCR1A = delay_count; // Set initial delay value
 304:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 308:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 30c:	9b bd       	out	0x2b, r25	; 43
 30e:	8a bd       	out	0x2a, r24	; 42
	
	TCCR1B |= ((1 << CS10) | (1 << CS11)); // Start timer at Fcpu / 64
 310:	8e b5       	in	r24, 0x2e	; 46
 312:	83 60       	ori	r24, 0x03	; 3
 314:	8e bd       	out	0x2e, r24	; 46
 316:	08 95       	ret

00000318 <init_ultrasoon>:
}

void init_ultrasoon(){
	DDRD = 0b00000110; // SET D0 AS INPUT (ECHO) AND D1 AS OUTPUT (TRIG)
 318:	86 e0       	ldi	r24, 0x06	; 6
 31a:	81 bb       	out	0x11, r24	; 17
	
	TCCR3A = 0;
 31c:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
	TCCR3B = 0;
 320:	ea e8       	ldi	r30, 0x8A	; 138
 322:	f0 e0       	ldi	r31, 0x00	; 0
 324:	10 82       	st	Z, r1
	TCNT3 = 0;
 326:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 32a:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	
	TCCR3B |= (1 << CS30);
 32e:	80 81       	ld	r24, Z
 330:	81 60       	ori	r24, 0x01	; 1
 332:	80 83       	st	Z, r24
	TIMSK |= (1 << TOIE3);
 334:	87 b7       	in	r24, 0x37	; 55
 336:	84 60       	ori	r24, 0x04	; 4
 338:	87 bf       	out	0x37, r24	; 55
 33a:	08 95       	ret

0000033c <init_interrupts>:
}

void init_interrupts(){
	// INIT Interrupt Hardware
	EICRA |= 0b00000010; // INT0 falling edge
 33c:	ea e6       	ldi	r30, 0x6A	; 106
 33e:	f0 e0       	ldi	r31, 0x00	; 0
 340:	80 81       	ld	r24, Z
 342:	82 60       	ori	r24, 0x02	; 2
 344:	80 83       	st	Z, r24
	EIMSK |= 0x01; // Enable INT0
 346:	89 b7       	in	r24, 0x39	; 57
 348:	81 60       	ori	r24, 0x01	; 1
 34a:	89 bf       	out	0x39, r24	; 57

	// enable global interrupt system
	sei();
 34c:	78 94       	sei
 34e:	08 95       	ret

00000350 <display_text>:
}

void display_text(char *str) {
 350:	cf 93       	push	r28
 352:	df 93       	push	r29
 354:	ec 01       	movw	r28, r24
	for (;*str; str++) {
 356:	02 c0       	rjmp	.+4      	; 0x35c <display_text+0xc>
		lcd_writeChar(*str);
 358:	98 df       	rcall	.-208    	; 0x28a <lcd_writeChar>
	// enable global interrupt system
	sei();
}

void display_text(char *str) {
	for (;*str; str++) {
 35a:	21 96       	adiw	r28, 0x01	; 1
 35c:	88 81       	ld	r24, Y
 35e:	81 11       	cpse	r24, r1
 360:	fb cf       	rjmp	.-10     	; 0x358 <display_text+0x8>
		lcd_writeChar(*str);
	}
}
 362:	df 91       	pop	r29
 364:	cf 91       	pop	r28
 366:	08 95       	ret

00000368 <set_cursor>:

void set_cursor(int position){
	unsigned char p = 0x80 + position;
	lcd_write_command(p);
 368:	80 58       	subi	r24, 0x80	; 128
 36a:	7f cf       	rjmp	.-258    	; 0x26a <lcd_write_command>
 36c:	08 95       	ret

0000036e <send_pulse>:
}


void send_pulse(){
	// Start Timer 3
	TCCR3B |= (1 << CS30);
 36e:	ea e8       	ldi	r30, 0x8A	; 138
 370:	f0 e0       	ldi	r31, 0x00	; 0
 372:	80 81       	ld	r24, Z
 374:	81 60       	ori	r24, 0x01	; 1
 376:	80 83       	st	Z, r24
	TCNT3 = 0;
 378:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 37c:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	
	PORTD |= BIT(1);
 380:	82 b3       	in	r24, 0x12	; 18
 382:	82 60       	ori	r24, 0x02	; 2
 384:	82 bb       	out	0x12, r24	; 18
	wait_micro(10); // Send a pulse of minimal timer period 10us, this will make the Ultrasonic module to send a burst of data.
 386:	8a e0       	ldi	r24, 0x0A	; 10
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	4f df       	rcall	.-354    	; 0x22a <wait_micro>
	PORTD ^= BIT(1);
 38c:	92 b3       	in	r25, 0x12	; 18
 38e:	82 e0       	ldi	r24, 0x02	; 2
 390:	89 27       	eor	r24, r25
 392:	82 bb       	out	0x12, r24	; 18
 394:	08 95       	ret

00000396 <main>:
}

int bool = 0;

int main(void)
{	
 396:	cf 93       	push	r28
 398:	df 93       	push	r29
 39a:	cd b7       	in	r28, 0x3d	; 61
 39c:	de b7       	in	r29, 0x3e	; 62
 39e:	c8 5c       	subi	r28, 0xC8	; 200
 3a0:	d1 09       	sbc	r29, r1
 3a2:	0f b6       	in	r0, 0x3f	; 63
 3a4:	f8 94       	cli
 3a6:	de bf       	out	0x3e, r29	; 62
 3a8:	0f be       	out	0x3f, r0	; 63
 3aa:	cd bf       	out	0x3d, r28	; 61
	init_interrupts();
 3ac:	c7 df       	rcall	.-114    	; 0x33c <init_interrupts>
	
	init_4bits_mode();
 3ae:	80 df       	rcall	.-256    	; 0x2b0 <init_4bits_mode>
	char buffer[200];
	
	init_buzzer();
 3b0:	9e df       	rcall	.-196    	; 0x2ee <init_buzzer>
 3b2:	b2 df       	rcall	.-156    	; 0x318 <init_ultrasoon>
	init_ultrasoon();
 3b4:	82 b3       	in	r24, 0x12	; 18
	
	PORTD |= BIT(2);
 3b6:	84 60       	ori	r24, 0x04	; 4
 3b8:	82 bb       	out	0x12, r24	; 18

	while (1){
		send_pulse();
 3ba:	d9 df       	rcall	.-78     	; 0x36e <send_pulse>
 3bc:	84 e6       	ldi	r24, 0x64	; 100
		wait(100);	
 3be:	90 e0       	ldi	r25, 0x00	; 0
 3c0:	25 df       	rcall	.-438    	; 0x20c <wait>
 3c2:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <distance>
		
		if (distance > 0){
 3c6:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <distance+0x1>
 3ca:	18 16       	cp	r1, r24
 3cc:	19 06       	cpc	r1, r25
 3ce:	34 f5       	brge	.+76     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3d0:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <__data_end+0x1>
			bool = 0;
 3d4:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <__data_end>
 3d8:	87 df       	rcall	.-242    	; 0x2e8 <clear_lcd>
			clear_lcd();
 3da:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <distance>
			int distance_cm = (distance - 2000) / 420;
 3de:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <distance+0x1>
 3e2:	80 5d       	subi	r24, 0xD0	; 208
 3e4:	97 40       	sbci	r25, 0x07	; 7
 3e6:	64 ea       	ldi	r22, 0xA4	; 164
 3e8:	71 e0       	ldi	r23, 0x01	; 1
 3ea:	32 d0       	rcall	.+100    	; 0x450 <__divmodhi4>
 3ec:	82 e0       	ldi	r24, 0x02	; 2
 3ee:	91 e0       	ldi	r25, 0x01	; 1
			sprintf(buffer, "%d%s", distance_cm, " cm");
 3f0:	9f 93       	push	r25
 3f2:	8f 93       	push	r24
 3f4:	7f 93       	push	r23
 3f6:	6f 93       	push	r22
 3f8:	86 e0       	ldi	r24, 0x06	; 6
 3fa:	91 e0       	ldi	r25, 0x01	; 1
 3fc:	9f 93       	push	r25
 3fe:	8f 93       	push	r24
 400:	8e 01       	movw	r16, r28
 402:	0f 5f       	subi	r16, 0xFF	; 255
 404:	1f 4f       	sbci	r17, 0xFF	; 255
 406:	1f 93       	push	r17
 408:	0f 93       	push	r16
 40a:	49 d0       	rcall	.+146    	; 0x49e <sprintf>
 40c:	c8 01       	movw	r24, r16
			display_text(buffer);
 40e:	a0 df       	rcall	.-192    	; 0x350 <display_text>
 410:	0f b6       	in	r0, 0x3f	; 63
 412:	f8 94       	cli
 414:	de bf       	out	0x3e, r29	; 62
 416:	0f be       	out	0x3f, r0	; 63
 418:	cd bf       	out	0x3d, r28	; 61
 41a:	cf cf       	rjmp	.-98     	; 0x3ba <main+0x24>
 41c:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <__data_end>
		} else {
			if (!bool){
 420:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <__data_end+0x1>
 424:	89 2b       	or	r24, r25
 426:	49 f6       	brne	.-110    	; 0x3ba <main+0x24>
				clear_lcd();
 428:	5f df       	rcall	.-322    	; 0x2e8 <clear_lcd>
 42a:	8b e0       	ldi	r24, 0x0B	; 11
				display_text("Yallah achteruit");
 42c:	91 e0       	ldi	r25, 0x01	; 1
 42e:	90 df       	rcall	.-224    	; 0x350 <display_text>
 430:	88 e2       	ldi	r24, 0x28	; 40
				set_cursor(40);
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	99 df       	rcall	.-206    	; 0x368 <set_cursor>
 436:	8c e1       	ldi	r24, 0x1C	; 28
 438:	91 e0       	ldi	r25, 0x01	; 1
				display_text("gaan, oulleh!");
 43a:	8a df       	rcall	.-236    	; 0x350 <display_text>
 43c:	80 e0       	ldi	r24, 0x00	; 0
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	93 df       	rcall	.-218    	; 0x368 <set_cursor>
				set_cursor(0);
 442:	81 e0       	ldi	r24, 0x01	; 1
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <__data_end+0x1>
				bool = 1;
 44a:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__data_end>
 44e:	b5 cf       	rjmp	.-150    	; 0x3ba <main+0x24>

00000450 <__divmodhi4>:
 450:	97 fb       	bst	r25, 7
 452:	07 2e       	mov	r0, r23
 454:	16 f4       	brtc	.+4      	; 0x45a <__divmodhi4+0xa>
 456:	00 94       	com	r0
 458:	06 d0       	rcall	.+12     	; 0x466 <__divmodhi4_neg1>
 45a:	77 fd       	sbrc	r23, 7
 45c:	08 d0       	rcall	.+16     	; 0x46e <__divmodhi4_neg2>
 45e:	0b d0       	rcall	.+22     	; 0x476 <__udivmodhi4>
 460:	07 fc       	sbrc	r0, 7
 462:	05 d0       	rcall	.+10     	; 0x46e <__divmodhi4_neg2>
 464:	3e f4       	brtc	.+14     	; 0x474 <__divmodhi4_exit>

00000466 <__divmodhi4_neg1>:
 466:	90 95       	com	r25
 468:	81 95       	neg	r24
 46a:	9f 4f       	sbci	r25, 0xFF	; 255
 46c:	08 95       	ret

0000046e <__divmodhi4_neg2>:
 46e:	70 95       	com	r23
 470:	61 95       	neg	r22
 472:	7f 4f       	sbci	r23, 0xFF	; 255

00000474 <__divmodhi4_exit>:
 474:	08 95       	ret

00000476 <__udivmodhi4>:
 476:	aa 1b       	sub	r26, r26
 478:	bb 1b       	sub	r27, r27
 47a:	51 e1       	ldi	r21, 0x11	; 17
 47c:	07 c0       	rjmp	.+14     	; 0x48c <__udivmodhi4_ep>

0000047e <__udivmodhi4_loop>:
 47e:	aa 1f       	adc	r26, r26
 480:	bb 1f       	adc	r27, r27
 482:	a6 17       	cp	r26, r22
 484:	b7 07       	cpc	r27, r23
 486:	10 f0       	brcs	.+4      	; 0x48c <__udivmodhi4_ep>
 488:	a6 1b       	sub	r26, r22
 48a:	b7 0b       	sbc	r27, r23

0000048c <__udivmodhi4_ep>:
 48c:	88 1f       	adc	r24, r24
 48e:	99 1f       	adc	r25, r25
 490:	5a 95       	dec	r21
 492:	a9 f7       	brne	.-22     	; 0x47e <__udivmodhi4_loop>
 494:	80 95       	com	r24
 496:	90 95       	com	r25
 498:	bc 01       	movw	r22, r24
 49a:	cd 01       	movw	r24, r26
 49c:	08 95       	ret

0000049e <sprintf>:
 49e:	0f 93       	push	r16
 4a0:	1f 93       	push	r17
 4a2:	cf 93       	push	r28
 4a4:	df 93       	push	r29
 4a6:	cd b7       	in	r28, 0x3d	; 61
 4a8:	de b7       	in	r29, 0x3e	; 62
 4aa:	2e 97       	sbiw	r28, 0x0e	; 14
 4ac:	0f b6       	in	r0, 0x3f	; 63
 4ae:	f8 94       	cli
 4b0:	de bf       	out	0x3e, r29	; 62
 4b2:	0f be       	out	0x3f, r0	; 63
 4b4:	cd bf       	out	0x3d, r28	; 61
 4b6:	0d 89       	ldd	r16, Y+21	; 0x15
 4b8:	1e 89       	ldd	r17, Y+22	; 0x16
 4ba:	86 e0       	ldi	r24, 0x06	; 6
 4bc:	8c 83       	std	Y+4, r24	; 0x04
 4be:	1a 83       	std	Y+2, r17	; 0x02
 4c0:	09 83       	std	Y+1, r16	; 0x01
 4c2:	8f ef       	ldi	r24, 0xFF	; 255
 4c4:	9f e7       	ldi	r25, 0x7F	; 127
 4c6:	9e 83       	std	Y+6, r25	; 0x06
 4c8:	8d 83       	std	Y+5, r24	; 0x05
 4ca:	ae 01       	movw	r20, r28
 4cc:	47 5e       	subi	r20, 0xE7	; 231
 4ce:	5f 4f       	sbci	r21, 0xFF	; 255
 4d0:	6f 89       	ldd	r22, Y+23	; 0x17
 4d2:	78 8d       	ldd	r23, Y+24	; 0x18
 4d4:	ce 01       	movw	r24, r28
 4d6:	01 96       	adiw	r24, 0x01	; 1
 4d8:	10 d0       	rcall	.+32     	; 0x4fa <vfprintf>
 4da:	ef 81       	ldd	r30, Y+7	; 0x07
 4dc:	f8 85       	ldd	r31, Y+8	; 0x08
 4de:	e0 0f       	add	r30, r16
 4e0:	f1 1f       	adc	r31, r17
 4e2:	10 82       	st	Z, r1
 4e4:	2e 96       	adiw	r28, 0x0e	; 14
 4e6:	0f b6       	in	r0, 0x3f	; 63
 4e8:	f8 94       	cli
 4ea:	de bf       	out	0x3e, r29	; 62
 4ec:	0f be       	out	0x3f, r0	; 63
 4ee:	cd bf       	out	0x3d, r28	; 61
 4f0:	df 91       	pop	r29
 4f2:	cf 91       	pop	r28
 4f4:	1f 91       	pop	r17
 4f6:	0f 91       	pop	r16
 4f8:	08 95       	ret

000004fa <vfprintf>:
 4fa:	2f 92       	push	r2
 4fc:	3f 92       	push	r3
 4fe:	4f 92       	push	r4
 500:	5f 92       	push	r5
 502:	6f 92       	push	r6
 504:	7f 92       	push	r7
 506:	8f 92       	push	r8
 508:	9f 92       	push	r9
 50a:	af 92       	push	r10
 50c:	bf 92       	push	r11
 50e:	cf 92       	push	r12
 510:	df 92       	push	r13
 512:	ef 92       	push	r14
 514:	ff 92       	push	r15
 516:	0f 93       	push	r16
 518:	1f 93       	push	r17
 51a:	cf 93       	push	r28
 51c:	df 93       	push	r29
 51e:	cd b7       	in	r28, 0x3d	; 61
 520:	de b7       	in	r29, 0x3e	; 62
 522:	2b 97       	sbiw	r28, 0x0b	; 11
 524:	0f b6       	in	r0, 0x3f	; 63
 526:	f8 94       	cli
 528:	de bf       	out	0x3e, r29	; 62
 52a:	0f be       	out	0x3f, r0	; 63
 52c:	cd bf       	out	0x3d, r28	; 61
 52e:	6c 01       	movw	r12, r24
 530:	7b 01       	movw	r14, r22
 532:	8a 01       	movw	r16, r20
 534:	fc 01       	movw	r30, r24
 536:	17 82       	std	Z+7, r1	; 0x07
 538:	16 82       	std	Z+6, r1	; 0x06
 53a:	83 81       	ldd	r24, Z+3	; 0x03
 53c:	81 ff       	sbrs	r24, 1
 53e:	bf c1       	rjmp	.+894    	; 0x8be <vfprintf+0x3c4>
 540:	ce 01       	movw	r24, r28
 542:	01 96       	adiw	r24, 0x01	; 1
 544:	3c 01       	movw	r6, r24
 546:	f6 01       	movw	r30, r12
 548:	93 81       	ldd	r25, Z+3	; 0x03
 54a:	f7 01       	movw	r30, r14
 54c:	93 fd       	sbrc	r25, 3
 54e:	85 91       	lpm	r24, Z+
 550:	93 ff       	sbrs	r25, 3
 552:	81 91       	ld	r24, Z+
 554:	7f 01       	movw	r14, r30
 556:	88 23       	and	r24, r24
 558:	09 f4       	brne	.+2      	; 0x55c <vfprintf+0x62>
 55a:	ad c1       	rjmp	.+858    	; 0x8b6 <vfprintf+0x3bc>
 55c:	85 32       	cpi	r24, 0x25	; 37
 55e:	39 f4       	brne	.+14     	; 0x56e <vfprintf+0x74>
 560:	93 fd       	sbrc	r25, 3
 562:	85 91       	lpm	r24, Z+
 564:	93 ff       	sbrs	r25, 3
 566:	81 91       	ld	r24, Z+
 568:	7f 01       	movw	r14, r30
 56a:	85 32       	cpi	r24, 0x25	; 37
 56c:	21 f4       	brne	.+8      	; 0x576 <vfprintf+0x7c>
 56e:	b6 01       	movw	r22, r12
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	d6 d1       	rcall	.+940    	; 0x920 <fputc>
 574:	e8 cf       	rjmp	.-48     	; 0x546 <vfprintf+0x4c>
 576:	91 2c       	mov	r9, r1
 578:	21 2c       	mov	r2, r1
 57a:	31 2c       	mov	r3, r1
 57c:	ff e1       	ldi	r31, 0x1F	; 31
 57e:	f3 15       	cp	r31, r3
 580:	d8 f0       	brcs	.+54     	; 0x5b8 <vfprintf+0xbe>
 582:	8b 32       	cpi	r24, 0x2B	; 43
 584:	79 f0       	breq	.+30     	; 0x5a4 <vfprintf+0xaa>
 586:	38 f4       	brcc	.+14     	; 0x596 <vfprintf+0x9c>
 588:	80 32       	cpi	r24, 0x20	; 32
 58a:	79 f0       	breq	.+30     	; 0x5aa <vfprintf+0xb0>
 58c:	83 32       	cpi	r24, 0x23	; 35
 58e:	a1 f4       	brne	.+40     	; 0x5b8 <vfprintf+0xbe>
 590:	23 2d       	mov	r18, r3
 592:	20 61       	ori	r18, 0x10	; 16
 594:	1d c0       	rjmp	.+58     	; 0x5d0 <vfprintf+0xd6>
 596:	8d 32       	cpi	r24, 0x2D	; 45
 598:	61 f0       	breq	.+24     	; 0x5b2 <vfprintf+0xb8>
 59a:	80 33       	cpi	r24, 0x30	; 48
 59c:	69 f4       	brne	.+26     	; 0x5b8 <vfprintf+0xbe>
 59e:	23 2d       	mov	r18, r3
 5a0:	21 60       	ori	r18, 0x01	; 1
 5a2:	16 c0       	rjmp	.+44     	; 0x5d0 <vfprintf+0xd6>
 5a4:	83 2d       	mov	r24, r3
 5a6:	82 60       	ori	r24, 0x02	; 2
 5a8:	38 2e       	mov	r3, r24
 5aa:	e3 2d       	mov	r30, r3
 5ac:	e4 60       	ori	r30, 0x04	; 4
 5ae:	3e 2e       	mov	r3, r30
 5b0:	2a c0       	rjmp	.+84     	; 0x606 <vfprintf+0x10c>
 5b2:	f3 2d       	mov	r31, r3
 5b4:	f8 60       	ori	r31, 0x08	; 8
 5b6:	1d c0       	rjmp	.+58     	; 0x5f2 <vfprintf+0xf8>
 5b8:	37 fc       	sbrc	r3, 7
 5ba:	2d c0       	rjmp	.+90     	; 0x616 <vfprintf+0x11c>
 5bc:	20 ed       	ldi	r18, 0xD0	; 208
 5be:	28 0f       	add	r18, r24
 5c0:	2a 30       	cpi	r18, 0x0A	; 10
 5c2:	40 f0       	brcs	.+16     	; 0x5d4 <vfprintf+0xda>
 5c4:	8e 32       	cpi	r24, 0x2E	; 46
 5c6:	b9 f4       	brne	.+46     	; 0x5f6 <vfprintf+0xfc>
 5c8:	36 fc       	sbrc	r3, 6
 5ca:	75 c1       	rjmp	.+746    	; 0x8b6 <vfprintf+0x3bc>
 5cc:	23 2d       	mov	r18, r3
 5ce:	20 64       	ori	r18, 0x40	; 64
 5d0:	32 2e       	mov	r3, r18
 5d2:	19 c0       	rjmp	.+50     	; 0x606 <vfprintf+0x10c>
 5d4:	36 fe       	sbrs	r3, 6
 5d6:	06 c0       	rjmp	.+12     	; 0x5e4 <vfprintf+0xea>
 5d8:	8a e0       	ldi	r24, 0x0A	; 10
 5da:	98 9e       	mul	r9, r24
 5dc:	20 0d       	add	r18, r0
 5de:	11 24       	eor	r1, r1
 5e0:	92 2e       	mov	r9, r18
 5e2:	11 c0       	rjmp	.+34     	; 0x606 <vfprintf+0x10c>
 5e4:	ea e0       	ldi	r30, 0x0A	; 10
 5e6:	2e 9e       	mul	r2, r30
 5e8:	20 0d       	add	r18, r0
 5ea:	11 24       	eor	r1, r1
 5ec:	22 2e       	mov	r2, r18
 5ee:	f3 2d       	mov	r31, r3
 5f0:	f0 62       	ori	r31, 0x20	; 32
 5f2:	3f 2e       	mov	r3, r31
 5f4:	08 c0       	rjmp	.+16     	; 0x606 <vfprintf+0x10c>
 5f6:	8c 36       	cpi	r24, 0x6C	; 108
 5f8:	21 f4       	brne	.+8      	; 0x602 <vfprintf+0x108>
 5fa:	83 2d       	mov	r24, r3
 5fc:	80 68       	ori	r24, 0x80	; 128
 5fe:	38 2e       	mov	r3, r24
 600:	02 c0       	rjmp	.+4      	; 0x606 <vfprintf+0x10c>
 602:	88 36       	cpi	r24, 0x68	; 104
 604:	41 f4       	brne	.+16     	; 0x616 <vfprintf+0x11c>
 606:	f7 01       	movw	r30, r14
 608:	93 fd       	sbrc	r25, 3
 60a:	85 91       	lpm	r24, Z+
 60c:	93 ff       	sbrs	r25, 3
 60e:	81 91       	ld	r24, Z+
 610:	7f 01       	movw	r14, r30
 612:	81 11       	cpse	r24, r1
 614:	b3 cf       	rjmp	.-154    	; 0x57c <vfprintf+0x82>
 616:	98 2f       	mov	r25, r24
 618:	9f 7d       	andi	r25, 0xDF	; 223
 61a:	95 54       	subi	r25, 0x45	; 69
 61c:	93 30       	cpi	r25, 0x03	; 3
 61e:	28 f4       	brcc	.+10     	; 0x62a <vfprintf+0x130>
 620:	0c 5f       	subi	r16, 0xFC	; 252
 622:	1f 4f       	sbci	r17, 0xFF	; 255
 624:	9f e3       	ldi	r25, 0x3F	; 63
 626:	99 83       	std	Y+1, r25	; 0x01
 628:	0d c0       	rjmp	.+26     	; 0x644 <vfprintf+0x14a>
 62a:	83 36       	cpi	r24, 0x63	; 99
 62c:	31 f0       	breq	.+12     	; 0x63a <vfprintf+0x140>
 62e:	83 37       	cpi	r24, 0x73	; 115
 630:	71 f0       	breq	.+28     	; 0x64e <vfprintf+0x154>
 632:	83 35       	cpi	r24, 0x53	; 83
 634:	09 f0       	breq	.+2      	; 0x638 <vfprintf+0x13e>
 636:	55 c0       	rjmp	.+170    	; 0x6e2 <vfprintf+0x1e8>
 638:	20 c0       	rjmp	.+64     	; 0x67a <vfprintf+0x180>
 63a:	f8 01       	movw	r30, r16
 63c:	80 81       	ld	r24, Z
 63e:	89 83       	std	Y+1, r24	; 0x01
 640:	0e 5f       	subi	r16, 0xFE	; 254
 642:	1f 4f       	sbci	r17, 0xFF	; 255
 644:	88 24       	eor	r8, r8
 646:	83 94       	inc	r8
 648:	91 2c       	mov	r9, r1
 64a:	53 01       	movw	r10, r6
 64c:	12 c0       	rjmp	.+36     	; 0x672 <vfprintf+0x178>
 64e:	28 01       	movw	r4, r16
 650:	f2 e0       	ldi	r31, 0x02	; 2
 652:	4f 0e       	add	r4, r31
 654:	51 1c       	adc	r5, r1
 656:	f8 01       	movw	r30, r16
 658:	a0 80       	ld	r10, Z
 65a:	b1 80       	ldd	r11, Z+1	; 0x01
 65c:	36 fe       	sbrs	r3, 6
 65e:	03 c0       	rjmp	.+6      	; 0x666 <vfprintf+0x16c>
 660:	69 2d       	mov	r22, r9
 662:	70 e0       	ldi	r23, 0x00	; 0
 664:	02 c0       	rjmp	.+4      	; 0x66a <vfprintf+0x170>
 666:	6f ef       	ldi	r22, 0xFF	; 255
 668:	7f ef       	ldi	r23, 0xFF	; 255
 66a:	c5 01       	movw	r24, r10
 66c:	4e d1       	rcall	.+668    	; 0x90a <strnlen>
 66e:	4c 01       	movw	r8, r24
 670:	82 01       	movw	r16, r4
 672:	f3 2d       	mov	r31, r3
 674:	ff 77       	andi	r31, 0x7F	; 127
 676:	3f 2e       	mov	r3, r31
 678:	15 c0       	rjmp	.+42     	; 0x6a4 <vfprintf+0x1aa>
 67a:	28 01       	movw	r4, r16
 67c:	22 e0       	ldi	r18, 0x02	; 2
 67e:	42 0e       	add	r4, r18
 680:	51 1c       	adc	r5, r1
 682:	f8 01       	movw	r30, r16
 684:	a0 80       	ld	r10, Z
 686:	b1 80       	ldd	r11, Z+1	; 0x01
 688:	36 fe       	sbrs	r3, 6
 68a:	03 c0       	rjmp	.+6      	; 0x692 <vfprintf+0x198>
 68c:	69 2d       	mov	r22, r9
 68e:	70 e0       	ldi	r23, 0x00	; 0
 690:	02 c0       	rjmp	.+4      	; 0x696 <vfprintf+0x19c>
 692:	6f ef       	ldi	r22, 0xFF	; 255
 694:	7f ef       	ldi	r23, 0xFF	; 255
 696:	c5 01       	movw	r24, r10
 698:	2d d1       	rcall	.+602    	; 0x8f4 <strnlen_P>
 69a:	4c 01       	movw	r8, r24
 69c:	f3 2d       	mov	r31, r3
 69e:	f0 68       	ori	r31, 0x80	; 128
 6a0:	3f 2e       	mov	r3, r31
 6a2:	82 01       	movw	r16, r4
 6a4:	33 fc       	sbrc	r3, 3
 6a6:	19 c0       	rjmp	.+50     	; 0x6da <vfprintf+0x1e0>
 6a8:	82 2d       	mov	r24, r2
 6aa:	90 e0       	ldi	r25, 0x00	; 0
 6ac:	88 16       	cp	r8, r24
 6ae:	99 06       	cpc	r9, r25
 6b0:	a0 f4       	brcc	.+40     	; 0x6da <vfprintf+0x1e0>
 6b2:	b6 01       	movw	r22, r12
 6b4:	80 e2       	ldi	r24, 0x20	; 32
 6b6:	90 e0       	ldi	r25, 0x00	; 0
 6b8:	33 d1       	rcall	.+614    	; 0x920 <fputc>
 6ba:	2a 94       	dec	r2
 6bc:	f5 cf       	rjmp	.-22     	; 0x6a8 <vfprintf+0x1ae>
 6be:	f5 01       	movw	r30, r10
 6c0:	37 fc       	sbrc	r3, 7
 6c2:	85 91       	lpm	r24, Z+
 6c4:	37 fe       	sbrs	r3, 7
 6c6:	81 91       	ld	r24, Z+
 6c8:	5f 01       	movw	r10, r30
 6ca:	b6 01       	movw	r22, r12
 6cc:	90 e0       	ldi	r25, 0x00	; 0
 6ce:	28 d1       	rcall	.+592    	; 0x920 <fputc>
 6d0:	21 10       	cpse	r2, r1
 6d2:	2a 94       	dec	r2
 6d4:	21 e0       	ldi	r18, 0x01	; 1
 6d6:	82 1a       	sub	r8, r18
 6d8:	91 08       	sbc	r9, r1
 6da:	81 14       	cp	r8, r1
 6dc:	91 04       	cpc	r9, r1
 6de:	79 f7       	brne	.-34     	; 0x6be <vfprintf+0x1c4>
 6e0:	e1 c0       	rjmp	.+450    	; 0x8a4 <vfprintf+0x3aa>
 6e2:	84 36       	cpi	r24, 0x64	; 100
 6e4:	11 f0       	breq	.+4      	; 0x6ea <vfprintf+0x1f0>
 6e6:	89 36       	cpi	r24, 0x69	; 105
 6e8:	39 f5       	brne	.+78     	; 0x738 <vfprintf+0x23e>
 6ea:	f8 01       	movw	r30, r16
 6ec:	37 fe       	sbrs	r3, 7
 6ee:	07 c0       	rjmp	.+14     	; 0x6fe <vfprintf+0x204>
 6f0:	60 81       	ld	r22, Z
 6f2:	71 81       	ldd	r23, Z+1	; 0x01
 6f4:	82 81       	ldd	r24, Z+2	; 0x02
 6f6:	93 81       	ldd	r25, Z+3	; 0x03
 6f8:	0c 5f       	subi	r16, 0xFC	; 252
 6fa:	1f 4f       	sbci	r17, 0xFF	; 255
 6fc:	08 c0       	rjmp	.+16     	; 0x70e <vfprintf+0x214>
 6fe:	60 81       	ld	r22, Z
 700:	71 81       	ldd	r23, Z+1	; 0x01
 702:	07 2e       	mov	r0, r23
 704:	00 0c       	add	r0, r0
 706:	88 0b       	sbc	r24, r24
 708:	99 0b       	sbc	r25, r25
 70a:	0e 5f       	subi	r16, 0xFE	; 254
 70c:	1f 4f       	sbci	r17, 0xFF	; 255
 70e:	f3 2d       	mov	r31, r3
 710:	ff 76       	andi	r31, 0x6F	; 111
 712:	3f 2e       	mov	r3, r31
 714:	97 ff       	sbrs	r25, 7
 716:	09 c0       	rjmp	.+18     	; 0x72a <vfprintf+0x230>
 718:	90 95       	com	r25
 71a:	80 95       	com	r24
 71c:	70 95       	com	r23
 71e:	61 95       	neg	r22
 720:	7f 4f       	sbci	r23, 0xFF	; 255
 722:	8f 4f       	sbci	r24, 0xFF	; 255
 724:	9f 4f       	sbci	r25, 0xFF	; 255
 726:	f0 68       	ori	r31, 0x80	; 128
 728:	3f 2e       	mov	r3, r31
 72a:	2a e0       	ldi	r18, 0x0A	; 10
 72c:	30 e0       	ldi	r19, 0x00	; 0
 72e:	a3 01       	movw	r20, r6
 730:	33 d1       	rcall	.+614    	; 0x998 <__ultoa_invert>
 732:	88 2e       	mov	r8, r24
 734:	86 18       	sub	r8, r6
 736:	44 c0       	rjmp	.+136    	; 0x7c0 <vfprintf+0x2c6>
 738:	85 37       	cpi	r24, 0x75	; 117
 73a:	31 f4       	brne	.+12     	; 0x748 <vfprintf+0x24e>
 73c:	23 2d       	mov	r18, r3
 73e:	2f 7e       	andi	r18, 0xEF	; 239
 740:	b2 2e       	mov	r11, r18
 742:	2a e0       	ldi	r18, 0x0A	; 10
 744:	30 e0       	ldi	r19, 0x00	; 0
 746:	25 c0       	rjmp	.+74     	; 0x792 <vfprintf+0x298>
 748:	93 2d       	mov	r25, r3
 74a:	99 7f       	andi	r25, 0xF9	; 249
 74c:	b9 2e       	mov	r11, r25
 74e:	8f 36       	cpi	r24, 0x6F	; 111
 750:	c1 f0       	breq	.+48     	; 0x782 <vfprintf+0x288>
 752:	18 f4       	brcc	.+6      	; 0x75a <vfprintf+0x260>
 754:	88 35       	cpi	r24, 0x58	; 88
 756:	79 f0       	breq	.+30     	; 0x776 <vfprintf+0x27c>
 758:	ae c0       	rjmp	.+348    	; 0x8b6 <vfprintf+0x3bc>
 75a:	80 37       	cpi	r24, 0x70	; 112
 75c:	19 f0       	breq	.+6      	; 0x764 <vfprintf+0x26a>
 75e:	88 37       	cpi	r24, 0x78	; 120
 760:	21 f0       	breq	.+8      	; 0x76a <vfprintf+0x270>
 762:	a9 c0       	rjmp	.+338    	; 0x8b6 <vfprintf+0x3bc>
 764:	e9 2f       	mov	r30, r25
 766:	e0 61       	ori	r30, 0x10	; 16
 768:	be 2e       	mov	r11, r30
 76a:	b4 fe       	sbrs	r11, 4
 76c:	0d c0       	rjmp	.+26     	; 0x788 <vfprintf+0x28e>
 76e:	fb 2d       	mov	r31, r11
 770:	f4 60       	ori	r31, 0x04	; 4
 772:	bf 2e       	mov	r11, r31
 774:	09 c0       	rjmp	.+18     	; 0x788 <vfprintf+0x28e>
 776:	34 fe       	sbrs	r3, 4
 778:	0a c0       	rjmp	.+20     	; 0x78e <vfprintf+0x294>
 77a:	29 2f       	mov	r18, r25
 77c:	26 60       	ori	r18, 0x06	; 6
 77e:	b2 2e       	mov	r11, r18
 780:	06 c0       	rjmp	.+12     	; 0x78e <vfprintf+0x294>
 782:	28 e0       	ldi	r18, 0x08	; 8
 784:	30 e0       	ldi	r19, 0x00	; 0
 786:	05 c0       	rjmp	.+10     	; 0x792 <vfprintf+0x298>
 788:	20 e1       	ldi	r18, 0x10	; 16
 78a:	30 e0       	ldi	r19, 0x00	; 0
 78c:	02 c0       	rjmp	.+4      	; 0x792 <vfprintf+0x298>
 78e:	20 e1       	ldi	r18, 0x10	; 16
 790:	32 e0       	ldi	r19, 0x02	; 2
 792:	f8 01       	movw	r30, r16
 794:	b7 fe       	sbrs	r11, 7
 796:	07 c0       	rjmp	.+14     	; 0x7a6 <vfprintf+0x2ac>
 798:	60 81       	ld	r22, Z
 79a:	71 81       	ldd	r23, Z+1	; 0x01
 79c:	82 81       	ldd	r24, Z+2	; 0x02
 79e:	93 81       	ldd	r25, Z+3	; 0x03
 7a0:	0c 5f       	subi	r16, 0xFC	; 252
 7a2:	1f 4f       	sbci	r17, 0xFF	; 255
 7a4:	06 c0       	rjmp	.+12     	; 0x7b2 <vfprintf+0x2b8>
 7a6:	60 81       	ld	r22, Z
 7a8:	71 81       	ldd	r23, Z+1	; 0x01
 7aa:	80 e0       	ldi	r24, 0x00	; 0
 7ac:	90 e0       	ldi	r25, 0x00	; 0
 7ae:	0e 5f       	subi	r16, 0xFE	; 254
 7b0:	1f 4f       	sbci	r17, 0xFF	; 255
 7b2:	a3 01       	movw	r20, r6
 7b4:	f1 d0       	rcall	.+482    	; 0x998 <__ultoa_invert>
 7b6:	88 2e       	mov	r8, r24
 7b8:	86 18       	sub	r8, r6
 7ba:	fb 2d       	mov	r31, r11
 7bc:	ff 77       	andi	r31, 0x7F	; 127
 7be:	3f 2e       	mov	r3, r31
 7c0:	36 fe       	sbrs	r3, 6
 7c2:	0d c0       	rjmp	.+26     	; 0x7de <vfprintf+0x2e4>
 7c4:	23 2d       	mov	r18, r3
 7c6:	2e 7f       	andi	r18, 0xFE	; 254
 7c8:	a2 2e       	mov	r10, r18
 7ca:	89 14       	cp	r8, r9
 7cc:	58 f4       	brcc	.+22     	; 0x7e4 <vfprintf+0x2ea>
 7ce:	34 fe       	sbrs	r3, 4
 7d0:	0b c0       	rjmp	.+22     	; 0x7e8 <vfprintf+0x2ee>
 7d2:	32 fc       	sbrc	r3, 2
 7d4:	09 c0       	rjmp	.+18     	; 0x7e8 <vfprintf+0x2ee>
 7d6:	83 2d       	mov	r24, r3
 7d8:	8e 7e       	andi	r24, 0xEE	; 238
 7da:	a8 2e       	mov	r10, r24
 7dc:	05 c0       	rjmp	.+10     	; 0x7e8 <vfprintf+0x2ee>
 7de:	b8 2c       	mov	r11, r8
 7e0:	a3 2c       	mov	r10, r3
 7e2:	03 c0       	rjmp	.+6      	; 0x7ea <vfprintf+0x2f0>
 7e4:	b8 2c       	mov	r11, r8
 7e6:	01 c0       	rjmp	.+2      	; 0x7ea <vfprintf+0x2f0>
 7e8:	b9 2c       	mov	r11, r9
 7ea:	a4 fe       	sbrs	r10, 4
 7ec:	0f c0       	rjmp	.+30     	; 0x80c <vfprintf+0x312>
 7ee:	fe 01       	movw	r30, r28
 7f0:	e8 0d       	add	r30, r8
 7f2:	f1 1d       	adc	r31, r1
 7f4:	80 81       	ld	r24, Z
 7f6:	80 33       	cpi	r24, 0x30	; 48
 7f8:	21 f4       	brne	.+8      	; 0x802 <vfprintf+0x308>
 7fa:	9a 2d       	mov	r25, r10
 7fc:	99 7e       	andi	r25, 0xE9	; 233
 7fe:	a9 2e       	mov	r10, r25
 800:	09 c0       	rjmp	.+18     	; 0x814 <vfprintf+0x31a>
 802:	a2 fe       	sbrs	r10, 2
 804:	06 c0       	rjmp	.+12     	; 0x812 <vfprintf+0x318>
 806:	b3 94       	inc	r11
 808:	b3 94       	inc	r11
 80a:	04 c0       	rjmp	.+8      	; 0x814 <vfprintf+0x31a>
 80c:	8a 2d       	mov	r24, r10
 80e:	86 78       	andi	r24, 0x86	; 134
 810:	09 f0       	breq	.+2      	; 0x814 <vfprintf+0x31a>
 812:	b3 94       	inc	r11
 814:	a3 fc       	sbrc	r10, 3
 816:	10 c0       	rjmp	.+32     	; 0x838 <vfprintf+0x33e>
 818:	a0 fe       	sbrs	r10, 0
 81a:	06 c0       	rjmp	.+12     	; 0x828 <vfprintf+0x32e>
 81c:	b2 14       	cp	r11, r2
 81e:	80 f4       	brcc	.+32     	; 0x840 <vfprintf+0x346>
 820:	28 0c       	add	r2, r8
 822:	92 2c       	mov	r9, r2
 824:	9b 18       	sub	r9, r11
 826:	0d c0       	rjmp	.+26     	; 0x842 <vfprintf+0x348>
 828:	b2 14       	cp	r11, r2
 82a:	58 f4       	brcc	.+22     	; 0x842 <vfprintf+0x348>
 82c:	b6 01       	movw	r22, r12
 82e:	80 e2       	ldi	r24, 0x20	; 32
 830:	90 e0       	ldi	r25, 0x00	; 0
 832:	76 d0       	rcall	.+236    	; 0x920 <fputc>
 834:	b3 94       	inc	r11
 836:	f8 cf       	rjmp	.-16     	; 0x828 <vfprintf+0x32e>
 838:	b2 14       	cp	r11, r2
 83a:	18 f4       	brcc	.+6      	; 0x842 <vfprintf+0x348>
 83c:	2b 18       	sub	r2, r11
 83e:	02 c0       	rjmp	.+4      	; 0x844 <vfprintf+0x34a>
 840:	98 2c       	mov	r9, r8
 842:	21 2c       	mov	r2, r1
 844:	a4 fe       	sbrs	r10, 4
 846:	0f c0       	rjmp	.+30     	; 0x866 <vfprintf+0x36c>
 848:	b6 01       	movw	r22, r12
 84a:	80 e3       	ldi	r24, 0x30	; 48
 84c:	90 e0       	ldi	r25, 0x00	; 0
 84e:	68 d0       	rcall	.+208    	; 0x920 <fputc>
 850:	a2 fe       	sbrs	r10, 2
 852:	16 c0       	rjmp	.+44     	; 0x880 <vfprintf+0x386>
 854:	a1 fc       	sbrc	r10, 1
 856:	03 c0       	rjmp	.+6      	; 0x85e <vfprintf+0x364>
 858:	88 e7       	ldi	r24, 0x78	; 120
 85a:	90 e0       	ldi	r25, 0x00	; 0
 85c:	02 c0       	rjmp	.+4      	; 0x862 <vfprintf+0x368>
 85e:	88 e5       	ldi	r24, 0x58	; 88
 860:	90 e0       	ldi	r25, 0x00	; 0
 862:	b6 01       	movw	r22, r12
 864:	0c c0       	rjmp	.+24     	; 0x87e <vfprintf+0x384>
 866:	8a 2d       	mov	r24, r10
 868:	86 78       	andi	r24, 0x86	; 134
 86a:	51 f0       	breq	.+20     	; 0x880 <vfprintf+0x386>
 86c:	a1 fe       	sbrs	r10, 1
 86e:	02 c0       	rjmp	.+4      	; 0x874 <vfprintf+0x37a>
 870:	8b e2       	ldi	r24, 0x2B	; 43
 872:	01 c0       	rjmp	.+2      	; 0x876 <vfprintf+0x37c>
 874:	80 e2       	ldi	r24, 0x20	; 32
 876:	a7 fc       	sbrc	r10, 7
 878:	8d e2       	ldi	r24, 0x2D	; 45
 87a:	b6 01       	movw	r22, r12
 87c:	90 e0       	ldi	r25, 0x00	; 0
 87e:	50 d0       	rcall	.+160    	; 0x920 <fputc>
 880:	89 14       	cp	r8, r9
 882:	30 f4       	brcc	.+12     	; 0x890 <vfprintf+0x396>
 884:	b6 01       	movw	r22, r12
 886:	80 e3       	ldi	r24, 0x30	; 48
 888:	90 e0       	ldi	r25, 0x00	; 0
 88a:	4a d0       	rcall	.+148    	; 0x920 <fputc>
 88c:	9a 94       	dec	r9
 88e:	f8 cf       	rjmp	.-16     	; 0x880 <vfprintf+0x386>
 890:	8a 94       	dec	r8
 892:	f3 01       	movw	r30, r6
 894:	e8 0d       	add	r30, r8
 896:	f1 1d       	adc	r31, r1
 898:	80 81       	ld	r24, Z
 89a:	b6 01       	movw	r22, r12
 89c:	90 e0       	ldi	r25, 0x00	; 0
 89e:	40 d0       	rcall	.+128    	; 0x920 <fputc>
 8a0:	81 10       	cpse	r8, r1
 8a2:	f6 cf       	rjmp	.-20     	; 0x890 <vfprintf+0x396>
 8a4:	22 20       	and	r2, r2
 8a6:	09 f4       	brne	.+2      	; 0x8aa <vfprintf+0x3b0>
 8a8:	4e ce       	rjmp	.-868    	; 0x546 <vfprintf+0x4c>
 8aa:	b6 01       	movw	r22, r12
 8ac:	80 e2       	ldi	r24, 0x20	; 32
 8ae:	90 e0       	ldi	r25, 0x00	; 0
 8b0:	37 d0       	rcall	.+110    	; 0x920 <fputc>
 8b2:	2a 94       	dec	r2
 8b4:	f7 cf       	rjmp	.-18     	; 0x8a4 <vfprintf+0x3aa>
 8b6:	f6 01       	movw	r30, r12
 8b8:	86 81       	ldd	r24, Z+6	; 0x06
 8ba:	97 81       	ldd	r25, Z+7	; 0x07
 8bc:	02 c0       	rjmp	.+4      	; 0x8c2 <vfprintf+0x3c8>
 8be:	8f ef       	ldi	r24, 0xFF	; 255
 8c0:	9f ef       	ldi	r25, 0xFF	; 255
 8c2:	2b 96       	adiw	r28, 0x0b	; 11
 8c4:	0f b6       	in	r0, 0x3f	; 63
 8c6:	f8 94       	cli
 8c8:	de bf       	out	0x3e, r29	; 62
 8ca:	0f be       	out	0x3f, r0	; 63
 8cc:	cd bf       	out	0x3d, r28	; 61
 8ce:	df 91       	pop	r29
 8d0:	cf 91       	pop	r28
 8d2:	1f 91       	pop	r17
 8d4:	0f 91       	pop	r16
 8d6:	ff 90       	pop	r15
 8d8:	ef 90       	pop	r14
 8da:	df 90       	pop	r13
 8dc:	cf 90       	pop	r12
 8de:	bf 90       	pop	r11
 8e0:	af 90       	pop	r10
 8e2:	9f 90       	pop	r9
 8e4:	8f 90       	pop	r8
 8e6:	7f 90       	pop	r7
 8e8:	6f 90       	pop	r6
 8ea:	5f 90       	pop	r5
 8ec:	4f 90       	pop	r4
 8ee:	3f 90       	pop	r3
 8f0:	2f 90       	pop	r2
 8f2:	08 95       	ret

000008f4 <strnlen_P>:
 8f4:	fc 01       	movw	r30, r24
 8f6:	05 90       	lpm	r0, Z+
 8f8:	61 50       	subi	r22, 0x01	; 1
 8fa:	70 40       	sbci	r23, 0x00	; 0
 8fc:	01 10       	cpse	r0, r1
 8fe:	d8 f7       	brcc	.-10     	; 0x8f6 <strnlen_P+0x2>
 900:	80 95       	com	r24
 902:	90 95       	com	r25
 904:	8e 0f       	add	r24, r30
 906:	9f 1f       	adc	r25, r31
 908:	08 95       	ret

0000090a <strnlen>:
 90a:	fc 01       	movw	r30, r24
 90c:	61 50       	subi	r22, 0x01	; 1
 90e:	70 40       	sbci	r23, 0x00	; 0
 910:	01 90       	ld	r0, Z+
 912:	01 10       	cpse	r0, r1
 914:	d8 f7       	brcc	.-10     	; 0x90c <strnlen+0x2>
 916:	80 95       	com	r24
 918:	90 95       	com	r25
 91a:	8e 0f       	add	r24, r30
 91c:	9f 1f       	adc	r25, r31
 91e:	08 95       	ret

00000920 <fputc>:
 920:	0f 93       	push	r16
 922:	1f 93       	push	r17
 924:	cf 93       	push	r28
 926:	df 93       	push	r29
 928:	fb 01       	movw	r30, r22
 92a:	23 81       	ldd	r18, Z+3	; 0x03
 92c:	21 fd       	sbrc	r18, 1
 92e:	03 c0       	rjmp	.+6      	; 0x936 <fputc+0x16>
 930:	8f ef       	ldi	r24, 0xFF	; 255
 932:	9f ef       	ldi	r25, 0xFF	; 255
 934:	2c c0       	rjmp	.+88     	; 0x98e <fputc+0x6e>
 936:	22 ff       	sbrs	r18, 2
 938:	16 c0       	rjmp	.+44     	; 0x966 <fputc+0x46>
 93a:	46 81       	ldd	r20, Z+6	; 0x06
 93c:	57 81       	ldd	r21, Z+7	; 0x07
 93e:	24 81       	ldd	r18, Z+4	; 0x04
 940:	35 81       	ldd	r19, Z+5	; 0x05
 942:	42 17       	cp	r20, r18
 944:	53 07       	cpc	r21, r19
 946:	44 f4       	brge	.+16     	; 0x958 <fputc+0x38>
 948:	a0 81       	ld	r26, Z
 94a:	b1 81       	ldd	r27, Z+1	; 0x01
 94c:	9d 01       	movw	r18, r26
 94e:	2f 5f       	subi	r18, 0xFF	; 255
 950:	3f 4f       	sbci	r19, 0xFF	; 255
 952:	31 83       	std	Z+1, r19	; 0x01
 954:	20 83       	st	Z, r18
 956:	8c 93       	st	X, r24
 958:	26 81       	ldd	r18, Z+6	; 0x06
 95a:	37 81       	ldd	r19, Z+7	; 0x07
 95c:	2f 5f       	subi	r18, 0xFF	; 255
 95e:	3f 4f       	sbci	r19, 0xFF	; 255
 960:	37 83       	std	Z+7, r19	; 0x07
 962:	26 83       	std	Z+6, r18	; 0x06
 964:	14 c0       	rjmp	.+40     	; 0x98e <fputc+0x6e>
 966:	8b 01       	movw	r16, r22
 968:	ec 01       	movw	r28, r24
 96a:	fb 01       	movw	r30, r22
 96c:	00 84       	ldd	r0, Z+8	; 0x08
 96e:	f1 85       	ldd	r31, Z+9	; 0x09
 970:	e0 2d       	mov	r30, r0
 972:	09 95       	icall
 974:	89 2b       	or	r24, r25
 976:	e1 f6       	brne	.-72     	; 0x930 <fputc+0x10>
 978:	d8 01       	movw	r26, r16
 97a:	16 96       	adiw	r26, 0x06	; 6
 97c:	8d 91       	ld	r24, X+
 97e:	9c 91       	ld	r25, X
 980:	17 97       	sbiw	r26, 0x07	; 7
 982:	01 96       	adiw	r24, 0x01	; 1
 984:	17 96       	adiw	r26, 0x07	; 7
 986:	9c 93       	st	X, r25
 988:	8e 93       	st	-X, r24
 98a:	16 97       	sbiw	r26, 0x06	; 6
 98c:	ce 01       	movw	r24, r28
 98e:	df 91       	pop	r29
 990:	cf 91       	pop	r28
 992:	1f 91       	pop	r17
 994:	0f 91       	pop	r16
 996:	08 95       	ret

00000998 <__ultoa_invert>:
 998:	fa 01       	movw	r30, r20
 99a:	aa 27       	eor	r26, r26
 99c:	28 30       	cpi	r18, 0x08	; 8
 99e:	51 f1       	breq	.+84     	; 0x9f4 <__ultoa_invert+0x5c>
 9a0:	20 31       	cpi	r18, 0x10	; 16
 9a2:	81 f1       	breq	.+96     	; 0xa04 <__ultoa_invert+0x6c>
 9a4:	e8 94       	clt
 9a6:	6f 93       	push	r22
 9a8:	6e 7f       	andi	r22, 0xFE	; 254
 9aa:	6e 5f       	subi	r22, 0xFE	; 254
 9ac:	7f 4f       	sbci	r23, 0xFF	; 255
 9ae:	8f 4f       	sbci	r24, 0xFF	; 255
 9b0:	9f 4f       	sbci	r25, 0xFF	; 255
 9b2:	af 4f       	sbci	r26, 0xFF	; 255
 9b4:	b1 e0       	ldi	r27, 0x01	; 1
 9b6:	3e d0       	rcall	.+124    	; 0xa34 <__ultoa_invert+0x9c>
 9b8:	b4 e0       	ldi	r27, 0x04	; 4
 9ba:	3c d0       	rcall	.+120    	; 0xa34 <__ultoa_invert+0x9c>
 9bc:	67 0f       	add	r22, r23
 9be:	78 1f       	adc	r23, r24
 9c0:	89 1f       	adc	r24, r25
 9c2:	9a 1f       	adc	r25, r26
 9c4:	a1 1d       	adc	r26, r1
 9c6:	68 0f       	add	r22, r24
 9c8:	79 1f       	adc	r23, r25
 9ca:	8a 1f       	adc	r24, r26
 9cc:	91 1d       	adc	r25, r1
 9ce:	a1 1d       	adc	r26, r1
 9d0:	6a 0f       	add	r22, r26
 9d2:	71 1d       	adc	r23, r1
 9d4:	81 1d       	adc	r24, r1
 9d6:	91 1d       	adc	r25, r1
 9d8:	a1 1d       	adc	r26, r1
 9da:	20 d0       	rcall	.+64     	; 0xa1c <__ultoa_invert+0x84>
 9dc:	09 f4       	brne	.+2      	; 0x9e0 <__ultoa_invert+0x48>
 9de:	68 94       	set
 9e0:	3f 91       	pop	r19
 9e2:	2a e0       	ldi	r18, 0x0A	; 10
 9e4:	26 9f       	mul	r18, r22
 9e6:	11 24       	eor	r1, r1
 9e8:	30 19       	sub	r19, r0
 9ea:	30 5d       	subi	r19, 0xD0	; 208
 9ec:	31 93       	st	Z+, r19
 9ee:	de f6       	brtc	.-74     	; 0x9a6 <__ultoa_invert+0xe>
 9f0:	cf 01       	movw	r24, r30
 9f2:	08 95       	ret
 9f4:	46 2f       	mov	r20, r22
 9f6:	47 70       	andi	r20, 0x07	; 7
 9f8:	40 5d       	subi	r20, 0xD0	; 208
 9fa:	41 93       	st	Z+, r20
 9fc:	b3 e0       	ldi	r27, 0x03	; 3
 9fe:	0f d0       	rcall	.+30     	; 0xa1e <__ultoa_invert+0x86>
 a00:	c9 f7       	brne	.-14     	; 0x9f4 <__ultoa_invert+0x5c>
 a02:	f6 cf       	rjmp	.-20     	; 0x9f0 <__ultoa_invert+0x58>
 a04:	46 2f       	mov	r20, r22
 a06:	4f 70       	andi	r20, 0x0F	; 15
 a08:	40 5d       	subi	r20, 0xD0	; 208
 a0a:	4a 33       	cpi	r20, 0x3A	; 58
 a0c:	18 f0       	brcs	.+6      	; 0xa14 <__ultoa_invert+0x7c>
 a0e:	49 5d       	subi	r20, 0xD9	; 217
 a10:	31 fd       	sbrc	r19, 1
 a12:	40 52       	subi	r20, 0x20	; 32
 a14:	41 93       	st	Z+, r20
 a16:	02 d0       	rcall	.+4      	; 0xa1c <__ultoa_invert+0x84>
 a18:	a9 f7       	brne	.-22     	; 0xa04 <__ultoa_invert+0x6c>
 a1a:	ea cf       	rjmp	.-44     	; 0x9f0 <__ultoa_invert+0x58>
 a1c:	b4 e0       	ldi	r27, 0x04	; 4
 a1e:	a6 95       	lsr	r26
 a20:	97 95       	ror	r25
 a22:	87 95       	ror	r24
 a24:	77 95       	ror	r23
 a26:	67 95       	ror	r22
 a28:	ba 95       	dec	r27
 a2a:	c9 f7       	brne	.-14     	; 0xa1e <__ultoa_invert+0x86>
 a2c:	00 97       	sbiw	r24, 0x00	; 0
 a2e:	61 05       	cpc	r22, r1
 a30:	71 05       	cpc	r23, r1
 a32:	08 95       	ret
 a34:	9b 01       	movw	r18, r22
 a36:	ac 01       	movw	r20, r24
 a38:	0a 2e       	mov	r0, r26
 a3a:	06 94       	lsr	r0
 a3c:	57 95       	ror	r21
 a3e:	47 95       	ror	r20
 a40:	37 95       	ror	r19
 a42:	27 95       	ror	r18
 a44:	ba 95       	dec	r27
 a46:	c9 f7       	brne	.-14     	; 0xa3a <__ultoa_invert+0xa2>
 a48:	62 0f       	add	r22, r18
 a4a:	73 1f       	adc	r23, r19
 a4c:	84 1f       	adc	r24, r20
 a4e:	95 1f       	adc	r25, r21
 a50:	a0 1d       	adc	r26, r0
 a52:	08 95       	ret

00000a54 <_exit>:
 a54:	f8 94       	cli

00000a56 <__stop_program>:
 a56:	ff cf       	rjmp	.-2      	; 0xa56 <__stop_program>
